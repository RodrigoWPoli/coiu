


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Jhony Minetto Araújo, Ricardo Marthus Gremmelmaier, R
                       odrigo Wolsky Poli
    4 00000000         ; Última atualização: 11/11/2024
    5 00000000         ; Este programa deve esperar o usu�rio pressionar uma 
                       chave.
    6 00000000         ; Caso o usuário pressione uma chave, um LED deve pisca
                       r a cada 1 segundo.
    7 00000000         
    8 00000000         ; ------------------------------------------------------
                       -------------------------
    9 00000000                 THUMB                        ; Instru��es do
                                                             tipo Thumb-2
   10 00000000         ; ------------------------------------------------------
                       -------------------------
   11 00000000         
   12 00000000         ; Declarações EQU - Defines
   13 00000000         ;<NOME>         EQU <VALOR>
   14 00000000         ; ========================
   15 00000000         ; Definições de Valores
   16 00000000         
   17 00000000         
   18 00000000         ; ------------------------------------------------------
                       -------------------------
   19 00000000         ; �rea de Dados - Declarações de vari�veis
   20 00000000                 AREA             DATA, ALIGN=2
   21 00000000         ; Se alguma variável for chamada em outro arquivo
   22 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   23 00000000         ; partir de outro arquivo
   24 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   25 00000000         ; de <tam> bytes a partir da primeira 
   26 00000000         ; posição da RAM  
   27 00000000         
   28 00000000         ; ------------------------------------------------------
                       -------------------------
   29 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir se
                       rá armazenado na memória de 
   30 00000000         ;                  código
   31 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   32 00000000         
   33 00000000         ; Se alguma função do arquivo for chamada em outro arq
                       uivo 
   34 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a pa
                                                            rtir de 
   35 00000000         ; outro arquivo. No caso startup.s
   36 00000000         
   37 00000000         ; Se chamar alguma função externa 
   38 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   39 00000000         ; função <func>
   40 00000000                 IMPORT           PLL_Init
   41 00000000                 IMPORT           SysTick_Init
   42 00000000                 IMPORT           SysTick_Wait1ms
   43 00000000                 IMPORT           GPIO_Init



ARM Macro Assembler    Page 2 


   44 00000000                 IMPORT           Led_Output
   45 00000000                 IMPORT           Switch_Input
   46 00000000                 IMPORT           Display_Output
   47 00000000         ; ------------------------------------------------------
                       -------------------------
   48 00000000         ; Função main()
   49 00000000         Start
   50 00000000         ; Comece o código aqui <===============================
                       =======================
   51 00000000         
   52 00000000 F7FF FFFE       BL               PLL_Init    ;Chama a subrotina 
                                                            para alterar o cloc
                                                            k do microcontrolad
                                                            or para 80MHz
   53 00000004 F7FF FFFE       BL               SysTick_Init ;Chama a subrotina
                                                             para inicializar o
                                                             SysTick
   54 00000008 F7FF FFFE       BL               GPIO_Init   ;Chama a subrotina 
                                                            que inicializa os G
                                                            PIO
   55 0000000C         
   56 0000000C F04F 0006       MOV              R0, #2_00000110
   57 00000010 F7FF FFFE       BL               Display_Output
   58 00000014         
   59 00000014 F04F 0005       MOV              R0, #2_00000101
   60 00000018 F7FF FFFE       BL               Display_Output
   61 0000001C         ; R0 -> Contador
   62 0000001C         ; R3 -> Leitura da Switch
   63 0000001C         ; R9 -> Passo a ser incrementado no contador
   64 0000001C         ; R2 -> Quantidade de ticks de ms
   65 0000001C F04F 0060       MOV              R0, #96
   66 00000020 F04F 0901       MOV              R9, #1
   67 00000024 F44F 72FA       MOV              R2, #500
   68 00000028         MainLoop
   69 00000028 F000 F82F       BL               PrintValue
   70 0000002C F7FF FFFE       BL               Switch_Input
   71 00000030         Loop
   72 00000030 2B03            CMP              R3, #2_11
   73 00000032 D105            BNE              Step_handler
   74 00000034 4448            ADD              R0, R9
   75 00000036 2800            CMP              R0, #0
   76 00000038 DB1D            BLT              CheckUnderflow
   77 0000003A 2863            CMP              R0, #99
   78 0000003C DC20            BGT              CheckOverflow
   79 0000003E         
   80 0000003E E7F3            B                MainLoop
   81 00000040         
   82 00000040         Step_handler
   83 00000040 2B02            CMP              R3, #2_10
   84 00000042 D107            BNE              Neg_handler
   85 00000044 F1B9 0F09       CMP              R9, #9
   86 00000048 BF34            ITE              LO
   87 0000004A F109 0901       ADDLO            R9, #1
   88 0000004E F04F 0900       MOVHS            R9, #0
   89 00000052         
   90 00000052 E7E9            B                MainLoop
   91 00000054         
   92 00000054         Neg_handler
   93 00000054 2B01            CMP              R3, #2_01



ARM Macro Assembler    Page 3 


   94 00000056 D102            BNE              Both_handler
   95 00000058 F1C9 0900       NEG              R9, R9
   96 0000005C E7E4            B                MainLoop
   97 0000005E         
   98 0000005E         Both_handler
   99 0000005E 2B00            CMP              R3, #2_00
  100 00000060 D1E2            BNE              MainLoop
  101 00000062 F1B9 0F09       CMP              R9, #9
  102 00000066 BF34            ITE              LO
  103 00000068 F109 0901       ADDLO            R9, #1
  104 0000006C F04F 0900       MOVHS            R9, #0
  105 00000070 F1C9 0900       NEG              R9, R9
  106 00000074 E7D8            B                MainLoop
  107 00000076         
  108 00000076         CheckUnderflow
  109 00000076 2800            CMP              R0, #0
  110 00000078 DAD6            BGE              MainLoop
  111 0000007A F04F 0063       MOV              R0, #99
  112 0000007E E7D3            B                MainLoop
  113 00000080         
  114 00000080         CheckOverflow
  115 00000080 2863            CMP              R0, #99
  116 00000082 DDD1            BLE              MainLoop
  117 00000084 F04F 0000       MOV              R0, #0
  118 00000088 E7CE            B                MainLoop
  119 0000008A         
  120 0000008A         PrintValue
  121 0000008A B500            PUSH             {LR}
  122 0000008C F7FF FFFE       BL               Led_Output
  123 00000090 F85D EB04       POP              {LR}
  124 00000094 4770            BX               LR
  125 00000096         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  126 00000096         ; Fim do Arquivo
  127 00000096         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 
  128 00000096 00 00           ALIGN                        ;Garante que o fim 
                                                            da se��o est�
                                                             alinhada 
  129 00000098                 END                          ;Fim do arquivo
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\main.d -o.\objects\main.o -IC:\Users\Ricar\AppData
\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL
 SETA 1" --predefine="__UVISION_VERSION SETA 536" --predefine="TM4C1294NCPDT SE
TA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 20 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 31 in file main.s
   Uses
      None
Comment: .text unused
Both_handler 0000005E

Symbol: Both_handler
   Definitions
      At line 98 in file main.s
   Uses
      At line 94 in file main.s
Comment: Both_handler used once
CheckOverflow 00000080

Symbol: CheckOverflow
   Definitions
      At line 114 in file main.s
   Uses
      At line 78 in file main.s
Comment: CheckOverflow used once
CheckUnderflow 00000076

Symbol: CheckUnderflow
   Definitions
      At line 108 in file main.s
   Uses
      At line 76 in file main.s
Comment: CheckUnderflow used once
Loop 00000030

Symbol: Loop
   Definitions
      At line 71 in file main.s
   Uses
      None
Comment: Loop unused
MainLoop 00000028

Symbol: MainLoop
   Definitions
      At line 68 in file main.s
   Uses
      At line 80 in file main.s
      At line 90 in file main.s
      At line 96 in file main.s
      At line 100 in file main.s
      At line 106 in file main.s
      At line 110 in file main.s
      At line 112 in file main.s
      At line 116 in file main.s
      At line 118 in file main.s

Neg_handler 00000054

Symbol: Neg_handler



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 92 in file main.s
   Uses
      At line 84 in file main.s
Comment: Neg_handler used once
PrintValue 0000008A

Symbol: PrintValue
   Definitions
      At line 120 in file main.s
   Uses
      At line 69 in file main.s
Comment: PrintValue used once
Start 00000000

Symbol: Start
   Definitions
      At line 49 in file main.s
   Uses
      At line 34 in file main.s
Comment: Start used once
Step_handler 00000040

Symbol: Step_handler
   Definitions
      At line 82 in file main.s
   Uses
      At line 73 in file main.s
Comment: Step_handler used once
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Display_Output 00000000

Symbol: Display_Output
   Definitions
      At line 46 in file main.s
   Uses
      At line 57 in file main.s
      At line 60 in file main.s

GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 43 in file main.s
   Uses
      At line 54 in file main.s
Comment: GPIO_Init used once
Led_Output 00000000

Symbol: Led_Output
   Definitions
      At line 44 in file main.s
   Uses
      At line 122 in file main.s
Comment: Led_Output used once
PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 40 in file main.s
   Uses
      At line 52 in file main.s
Comment: PLL_Init used once
Switch_Input 00000000

Symbol: Switch_Input
   Definitions
      At line 45 in file main.s
   Uses
      At line 70 in file main.s
Comment: Switch_Input used once
SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 41 in file main.s
   Uses
      At line 53 in file main.s
Comment: SysTick_Init used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 42 in file main.s
   Uses
      None
Comment: SysTick_Wait1ms unused
7 symbols
352 symbols in table
