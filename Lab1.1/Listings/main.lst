


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Jhony Minetto Araújo, Ricardo Marthus Gremmelmaier, R
                       odrigo Wolsky Poli
    4 00000000         ; Última atualização: 11/11/2024
    5 00000000         ; Este programa deve esperar o usu�rio pressionar uma 
                       chave.
    6 00000000         ; Caso o usuário pressione uma chave, um LED deve pisca
                       r a cada 1 segundo.
    7 00000000         
    8 00000000         ; ------------------------------------------------------
                       -------------------------
    9 00000000                 THUMB                        ; Instru��es do
                                                             tipo Thumb-2
   10 00000000         ; ------------------------------------------------------
                       -------------------------
   11 00000000         
   12 00000000         ; Declarações EQU - Defines
   13 00000000         ;<NOME>         EQU <VALOR>
   14 00000000         ; ========================
   15 00000000         ; Definições de Valores
   16 00000000         
   17 00000000         
   18 00000000         ; ------------------------------------------------------
                       -------------------------
   19 00000000         ; �rea de Dados - Declarações de vari�veis
   20 00000000                 AREA             DATA, ALIGN=2
   21 00000000         ; Se alguma variável for chamada em outro arquivo
   22 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   23 00000000         ; partir de outro arquivo
   24 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   25 00000000         ; de <tam> bytes a partir da primeira 
   26 00000000         ; posição da RAM  
   27 00000000         
   28 00000000         ; ------------------------------------------------------
                       -------------------------
   29 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir se
                       rá armazenado na memória de 
   30 00000000         ;                  código
   31 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   32 00000000         
   33 00000000         ; Se alguma função do arquivo for chamada em outro arq
                       uivo 
   34 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a pa
                                                            rtir de 
   35 00000000         ; outro arquivo. No caso startup.s
   36 00000000         
   37 00000000         ; Se chamar alguma função externa 
   38 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   39 00000000         ; função <func>
   40 00000000                 IMPORT           PLL_Init
   41 00000000                 IMPORT           SysTick_Init
   42 00000000                 IMPORT           SysTick_Wait1ms
   43 00000000                 IMPORT           GPIO_Init



ARM Macro Assembler    Page 2 


   44 00000000                 IMPORT           Led_Output
   45 00000000                 IMPORT           Switch_Input
   46 00000000                 IMPORT           Display_Output
   47 00000000         ; ------------------------------------------------------
                       -------------------------
   48 00000000         ; Função main()
   49 00000000         Start
   50 00000000         ; Comece o código aqui <===============================
                       =======================
   51 00000000         
   52 00000000 F7FF FFFE       BL               PLL_Init    ;Chama a subrotina 
                                                            para alterar o cloc
                                                            k do microcontrolad
                                                            or para 80MHz
   53 00000004 F7FF FFFE       BL               SysTick_Init ;Chama a subrotina
                                                             para inicializar o
                                                             SysTick
   54 00000008 F7FF FFFE       BL               GPIO_Init   ;Chama a subrotina 
                                                            que inicializa os G
                                                            PIO
   55 0000000C         
   56 0000000C F04F 0101       MOV              R1, #2_1
   57 00000010 F04F 0000       MOV              R0, #2_00000000
   58 00000014         TestaDisplay
   59 00000014 F7FF FFFE       BL               Display_Output
   60 00000018 4408            ADD              R0, R1
   61 0000001A 2863            CMP              R0, #99
   62 0000001C D000            BEQ              Acabou
   63 0000001E E7F9            B                TestaDisplay
   64 00000020         ; R0 -> Contador
   65 00000020         ; R3 -> Leitura da Switch
   66 00000020         ; R8 -> Valor da Switch anterior
   67 00000020         ; R9 -> Passo a ser incrementado no contador
   68 00000020         ; R2 -> Quantidade de ticks de ms
   69 00000020         Acabou
   70 00000020 F04F 0000       MOV              R0, #0      ; Contador iniciand
                                                            o em 0
   71 00000024 F44F 72FA       MOV              R2, #500    ; Tempo para trocar
                                                             o contador
   72 00000028 F04F 0901       MOV              R9, #1      ; Passo iniciando e
                                                            m 0
   73 0000002C F04F 0803       MOV              R8, #2_11   ; Inicia com as dua
                                                            s switches inativas
                                                            
   74 00000030         
   75 00000030         MainLoop
   76 00000030 F7FF FFFE       BL               Led_Output  ; Grava na placa os
                                                             Leds
   77 00000034         ; BL Display_Output    ; Grava na placa os displays
   78 00000034         ; BL PrintValue     ; Chamada pra mostrar os displays e 
                       leds
   79 00000034 F7FF FFFE       BL               Switch_Input ; Chamada pra ler 
                                                            o switch
   80 00000038 B408            PUSH             {R3}        ; Salvar o valor da
                                                             switch
   81 0000003A         CounterLoop
   82 0000003A 2B03            CMP              R3, #2_11   ; Se nenhum switch 
                                                            for ativo, apenas i
                                                            ncrementa ou decrem



ARM Macro Assembler    Page 3 


                                                            enta o contador
   83 0000003C D105            BNE              Step_handler
   84 0000003E 4448            ADD              R0, R9      ; Incrementa o cont
                                                            ador
   85 00000040 2800            CMP              R0, #0      ; Compara para ver 
                                                            se nao ficou abaixo
                                                             de zero
   86 00000042 DB22            BLT              CheckUnderflow
   87 00000044 2863            CMP              R0, #99     ; Compara para ver 
                                                            se nao ficou acima 
                                                            de 100
   88 00000046 DC23            BGT              CheckOverflow
   89 00000048         
   90 00000048 E7F2            B                MainLoop
   91 0000004A         
   92 0000004A         Step_handler
   93 0000004A 2B02            CMP              R3, #2_10   ; Se tiver SW1 ativ
                                                            a, incrementa o pas
                                                            so ou decrementa
   94 0000004C D106            BNE              Neg_handler
   95 0000004E         
   96 0000004E F018 0F01       TST              R8, #1      ; Se o ultimo bit e
                                                            ra 0, volta para o 
                                                            loop
   97 00000052 D0ED            BEQ              MainLoop    ; Se nao, pode cont
                                                            inuar
   98 00000054         
   99 00000054 F1B9 0F00       CMP              R9, #0      ; Verifica se é ne
                                                            gativo e se for, de
                                                            crementa o passo
  100 00000058 D427            BMI              DecrementStep
  101 0000005A E01C            B                IncrementStep ; Se nao for, inc
                                                            rementa o passo
  102 0000005C         
  103 0000005C         Neg_handler
  104 0000005C 2B01            CMP              R3, #2_01   ; Se tiver SW2 ativ
                                                            a, inverte o contad
                                                            or negativando o pa
                                                            sso
  105 0000005E D109            BNE              Both_handler
  106 00000060         
  107 00000060 F018 0F02       TST              R8, #2      ; Se o penúltimo b
                                                            it era 0, volta par
                                                            a o loop
  108 00000064 D0E4            BEQ              MainLoop    ; Se nao, pode cont
                                                            inuar
  109 00000066         
  110 00000066 F018 0F00       TST              R8, #2_00   ; Se o penultimo bi
                                                            t era 0, volta para
                                                             o loop
  111 0000006A F1C9 0900       NEG              R9, R9      ; Negativa o passo
  112 0000006E F85D 8B04       POP              {R8}        ; Atualizo valor sa
                                                            lvo da switch
  113 00000072 E7DD            B                MainLoop
  114 00000074         
  115 00000074         Both_handler
  116 00000074 2B00            CMP              R3, #2_00   ; Se as duas SW for
                                                            em ativas, realiza 
                                                            as duas ações



ARM Macro Assembler    Page 4 


  117 00000076 D1DB            BNE              MainLoop
  118 00000078         
  119 00000078 F018 0F03       TST              R8, #3      ; Se os ultimos 2 b
                                                            its eram 0, volta p
                                                            ara o loop
  120 0000007C D0D8            BEQ              MainLoop    ; Se nao, pode cont
                                                            inuar
  121 0000007E         
  122 0000007E F1C9 0900       NEG              R9, R9      ; Negativa o valor
  123 00000082 F1B9 0F00       CMP              R9, #0      ; Verifica se é ne
                                                            gativo e se for, de
                                                            crementa o passo
  124 00000086 D410            BMI              DecrementStep
  125 00000088 E005            B                IncrementStep ; Se nao for, inc
                                                            rementa o passo
  126 0000008A         
  127 0000008A         CheckUnderflow
  128 0000008A F04F 0063       MOV              R0, #99
  129 0000008E E7CF            B                MainLoop
  130 00000090         
  131 00000090         CheckOverflow
  132 00000090 F04F 0000       MOV              R0, #0
  133 00000094 E7CC            B                MainLoop
  134 00000096         
  135 00000096         IncrementStep
  136 00000096 F1B9 0F09       CMP              R9, #9      ; Compara se o pass
                                                            o está no limite s
                                                            uperior (9)     
  137 0000009A BFB4            ITE              LT
  138 0000009C F109 0901       ADDLT            R9, #1      ; Caso seja menor q
                                                            ue 9, adiciona 1
  139 000000A0 F04F 0901       MOVGE            R9, #1      ; Caso seja 9 ou ma
                                                            ior, seta para 1
  140 000000A4 F85D 8B04       POP              {R8}        ; Atualizo valor sa
                                                            lvo da switch
  141 000000A8 E7C2            B                MainLoop
  142 000000AA         
  143 000000AA         DecrementStep
  144 000000AA F1C9 0900       NEG              R9, R9      ; Torna o valor pos
                                                            itivo
  145 000000AE F1B9 0F01       CMP              R9, #1      ; Compara se o pass
                                                            o está no limite i
                                                            nferior (1)
  146 000000B2 BFCC            ITE              GT
  147 000000B4 F1A9 0901       SUBGT            R9, #1      ; Caso seja maior q
                                                            ue 1, reduz 1
  148 000000B8 F04F 0909       MOVLE            R9, #9      ; Caso seja igual o
                                                            u menor a 1, seta p
                                                            ara 9
  149 000000BC F1C9 0900       NEG              R9, R9      ; Torna o valor neg
                                                            ativo novamente
  150 000000C0 F85D 8B04       POP              {R8}        ; Atualizo valor sa
                                                            lvo da switch
  151 000000C4 E7B4            B                MainLoop
  152 000000C6         
  153 000000C6         PrintValue
  154 000000C6 B500            PUSH             {LR}        ; Salva o Link Regi
                                                            ster
  155 000000C8 F7FF FFFE       BL               Led_Output  ; Grava na placa os



ARM Macro Assembler    Page 5 


                                                             Leds
  156 000000CC F7FF FFFE       BL               Display_Output ; Grava na placa
                                                             os displays
  157 000000D0 F85D EB04       POP              {LR}        ; Volta o Link Regi
                                                            ster
  158 000000D4 4770            BX               LR
  159 000000D6         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  160 000000D6         ; Fim do Arquivo
  161 000000D6         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 
  162 000000D6 00 00           ALIGN                        ;Garante que o fim 
                                                            da se��o est�
                                                             alinhada 
  163 000000D8                 END                          ;Fim do arquivo
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\main.d -o.\objects\main.o -IC:\Users\Ricar\AppData
\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL
 SETA 1" --predefine="__UVISION_VERSION SETA 536" --predefine="TM4C1294NCPDT SE
TA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 20 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 31 in file main.s
   Uses
      None
Comment: .text unused
Acabou 00000020

Symbol: Acabou
   Definitions
      At line 69 in file main.s
   Uses
      At line 62 in file main.s
Comment: Acabou used once
Both_handler 00000074

Symbol: Both_handler
   Definitions
      At line 115 in file main.s
   Uses
      At line 105 in file main.s
Comment: Both_handler used once
CheckOverflow 00000090

Symbol: CheckOverflow
   Definitions
      At line 131 in file main.s
   Uses
      At line 88 in file main.s
Comment: CheckOverflow used once
CheckUnderflow 0000008A

Symbol: CheckUnderflow
   Definitions
      At line 127 in file main.s
   Uses
      At line 86 in file main.s
Comment: CheckUnderflow used once
CounterLoop 0000003A

Symbol: CounterLoop
   Definitions
      At line 81 in file main.s
   Uses
      None
Comment: CounterLoop unused
DecrementStep 000000AA

Symbol: DecrementStep
   Definitions
      At line 143 in file main.s
   Uses
      At line 100 in file main.s
      At line 124 in file main.s

IncrementStep 00000096




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: IncrementStep
   Definitions
      At line 135 in file main.s
   Uses
      At line 101 in file main.s
      At line 125 in file main.s

MainLoop 00000030

Symbol: MainLoop
   Definitions
      At line 75 in file main.s
   Uses
      At line 90 in file main.s
      At line 97 in file main.s
      At line 108 in file main.s
      At line 113 in file main.s
      At line 117 in file main.s
      At line 120 in file main.s
      At line 129 in file main.s
      At line 133 in file main.s
      At line 141 in file main.s
      At line 151 in file main.s

Neg_handler 0000005C

Symbol: Neg_handler
   Definitions
      At line 103 in file main.s
   Uses
      At line 94 in file main.s
Comment: Neg_handler used once
PrintValue 000000C6

Symbol: PrintValue
   Definitions
      At line 153 in file main.s
   Uses
      None
Comment: PrintValue unused
Start 00000000

Symbol: Start
   Definitions
      At line 49 in file main.s
   Uses
      At line 34 in file main.s
Comment: Start used once
Step_handler 0000004A

Symbol: Step_handler
   Definitions
      At line 92 in file main.s
   Uses
      At line 83 in file main.s
Comment: Step_handler used once
TestaDisplay 00000014

Symbol: TestaDisplay



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 58 in file main.s
   Uses
      At line 63 in file main.s
Comment: TestaDisplay used once
14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Display_Output 00000000

Symbol: Display_Output
   Definitions
      At line 46 in file main.s
   Uses
      At line 59 in file main.s
      At line 156 in file main.s

GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 43 in file main.s
   Uses
      At line 54 in file main.s
Comment: GPIO_Init used once
Led_Output 00000000

Symbol: Led_Output
   Definitions
      At line 44 in file main.s
   Uses
      At line 76 in file main.s
      At line 155 in file main.s

PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 40 in file main.s
   Uses
      At line 52 in file main.s
Comment: PLL_Init used once
Switch_Input 00000000

Symbol: Switch_Input
   Definitions
      At line 45 in file main.s
   Uses
      At line 79 in file main.s
Comment: Switch_Input used once
SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 41 in file main.s
   Uses
      At line 53 in file main.s
Comment: SysTick_Init used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 42 in file main.s
   Uses
      None
Comment: SysTick_Wait1ms unused
7 symbols



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

356 symbols in table
