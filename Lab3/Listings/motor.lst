


ARM Macro Assembler    Page 1 


    1 00000000         ;lcd.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Jhony Minetto Araujo, Ricardo Marthus Gremmelmaier, Ro
                       drigo Wolsky Poli
    4 00000000         ; Ver 1 02/12/2024
    5 00000000         ; Ver 2 29/01/2025
    6 00000000         
    7 00000000         
    8 00000000         ; ------------------------------------------------------
                       -------------------------
    9 00000000                 PRESERVE8        {TRUE}
   10 00000000                 THUMB                        ; Instrucoes do tip
                                                            o Thumb-2
   11 00000000         ; ------------------------------------------------------
                       -------------------------
   12 00000000         ; Declaracoes EQU - Defines
   13 00000000         ;<NOME>         EQU <VALOR>
   14 00000000         ; ========================
   15 00000000         ; ~~~~~~~~~~~~~ OTHER CONSTANTS ~~~~~~~~~~~~~~F
   16 00000000 20020004 
                       CURR_KEY
                               EQU              0x20020004
   17 00000000 20030000 
                       ANGLE   EQU              0x20030000
   18 00000000 20030004 
                       TURN    EQU              0x20030004
   19 00000000 20030008 
                       MODE    EQU              0x20030008
   20 00000000 2003000C 
                       APOLARITY
                               EQU              0x2003000C
   21 00000000 20030010 
                       TPOLARITY
                               EQU              0x20030010
   22 00000000 0000002D 
                       char_minus
                               EQU              2_00101101
   23 00000000 000000DF 
                       char_angle
                               EQU              2_11011111
   24 00000000         
   25 00000000         ; ------------------------------------------------------
                       -------------------------
   26 00000000         ; Area de Dados - Declaracoes de variaveis
   27 00000000                 AREA             DATA, ALIGN=2
   28 00000000         ; Se alguma variavel for chamada em outro arquivo
   29 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riavel <var> a 
   30 00000000         ; partir de outro arquivo
   31 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variavel de nome <var>
   32 00000000         ; de <tam> bytes a partir da primeira 
   33 00000000         ; posicao da RAM  
   34 00000000         
   35 00000000         ; ------------------------------------------------------
                       -------------------------
   36 00000000         ; Area de Codigo - Tudo abaixo da diretiva a seguir sera
                        armazenado na memoria de 
   37 00000000         ;                  codigo



ARM Macro Assembler    Page 2 


   38 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   39 00000000         
   40 00000000                 EXPORT           calculate_angle_turn
   41 00000000         
   42 00000000                 IMPORT           SysTick_Wait1ms
   43 00000000                 IMPORT           create_data_row
   44 00000000                 IMPORT           create_increment_row
   45 00000000                 IMPORT           LCD_Display_Number
   46 00000000                 IMPORT           LCD_Display_Character
   47 00000000                 IMPORT           angle_decoder
   48 00000000         
   49 00000000         ; ------------------------------------------------------
                       -------------------------
   50 00000000         ; Funcao calculate_angle_turn
   51 00000000         ; Input: nenhum
   52 00000000         ; Output: nenhum
   53 00000000         
   54 00000000         calculate_angle_turn
   55 00000000 B500            PUSH             {LR}
   56 00000002         
   57 00000002 493F            LDR              R1, =CURR_KEY ;Incremento do an
                                                            gulo
   58 00000004 6808            LDR              R0, [R1]
   59 00000006 F7FF FFFE       BL               angle_decoder
   60 0000000A 4604            MOV              R4, R0
   61 0000000C         
   62 0000000C F7FF FFFE       BL               create_increment_row ;Cria a li
                                                            nha de incremento
   63 00000010         
   64 00000010 493B            LDR              R1, =CURR_KEY ;Verifica se o in
                                                            cremento do angulo 
                                                            é negativo ou posi
                                                            tivo
   65 00000012 6808            LDR              R0, [R1]
   66 00000014 2837            CMP              R0, #0x37
   67 00000016 D334            BLO              positive
   68 00000018         
   69 00000018 F04F 002D       LDR              R0, =char_minus ;Valor negativo
                                                             de incremento, sub
                                                            trair de angulo pos
                                                            itivo ou somar de a
                                                            ngulo negativo
   70 0000001C F7FF FFFE       BL               LCD_Display_Character ; printar
                                                             - no display
   71 00000020         
   72 00000020 4938            LDR              R1, =APOLARITY ;Verifica polari
                                                            dade: 0 = positivo,
                                                             1 = negativo
   73 00000022 680A            LDR              R2, [R1]
   74 00000024 2A01            CMP              R2, #1
   75 00000026 D00F            BEQ              negativeAngle
   76 00000028         
   77 00000028 4937            LDR              R1, =ANGLE  ;Faz a subtração 
                                                            do angulo, porque o
                                                             angulo é positivo
                                                             e incremento negat
                                                            ivo
   78 0000002A 680A            LDR              R2, [R1]



ARM Macro Assembler    Page 3 


   79 0000002C 4620            MOV              R0, R4
   80 0000002E EBA2 0200       SUB              R2, R0      ;Verifica se houve 
                                                            mudança de sinal
   81 00000032 2A00            CMP              R2, #0
   82 00000034 DA05            BGE              skip_inverse_apolarity1
   83 00000036         
   84 00000036 4933            LDR              R1, =APOLARITY ;Transforma a po
                                                            laridade em negativ
                                                            a porque houve muda
                                                            nça de sinal
   85 00000038 F04F 0301       MOV              R3, #1
   86 0000003C 600B            STR              R3, [R1]
   87 0000003E         
   88 0000003E F1C2 0200       NEG              R2, R2      ;Inverte o sinal do
                                                             angulo para sempre
                                                             ser positivo
   89 00000042         
   90 00000042         skip_inverse_apolarity1
   91 00000042 4931            LDR              R1, =ANGLE
   92 00000044 600A            STR              R2, [R1]
   93 00000046         
   94 00000046 E04D            B                display_number
   95 00000048         
   96 00000048         negativeAngle
   97 00000048 492F            LDR              R1, =ANGLE  ;Faz a soma do angu
                                                            lo, porque o angulo
                                                             é negativo e incr
                                                            emento negativo
   98 0000004A 680A            LDR              R2, [R1]
   99 0000004C 4620            MOV              R0, R4
  100 0000004E 4402            ADD              R2, R0
  101 00000050         
  102 00000050 F5B2 7FB4       CMP              R2, #360    ;Verifica se bateu 
                                                            uma volta
  103 00000054 D313            BLO              skip_add_turn
  104 00000056         
  105 00000056 492D            LDR              R1, =TPOLARITY ;Verifica polari
                                                            dade: 0 = positivo,
                                                             1 = negativo
  106 00000058 680B            LDR              R3, [R1]    ;Se a polaridade fo
                                                            r negativa, somar m
                                                            ais um, se for posi
                                                            tiva, subtrair um
  107 0000005A 492D            LDR              R1, =TURN
  108 0000005C 680D            LDR              R5, [R1]
  109 0000005E 2B01            CMP              R3, #1
  110 00000060 BF0C            ITE              EQ
  111 00000062 3501            ADDEQ            R5, #1
  112 00000064 3D01            SUBNE            R5, #1      ;Verificar se as vo
                                                            ltas caíram para u
                                                            m valor negativo
  113 00000066         
  114 00000066 2D00            CMP              R5, #0
  115 00000068 4928            LDR              R1, =TPOLARITY
  116 0000006A F04F 0601       MOV              R6, #1
  117 0000006E BFBC            ITT              LT          ;Se caiu para valor
                                                             negativo, coloco p
                                                            ositivo a volta e m
                                                            udo a polaridade



ARM Macro Assembler    Page 4 


  118 00000070 426D            NEGLT            R5, R5
  119 00000072 600E            STRLT            R6, [R1]
  120 00000074         
  121 00000074 4926            LDR              R1, =TURN
  122 00000076 600D            STR              R5, [R1]
  123 00000078         
  124 00000078 F5A2 72B4       SUB              R2, #360
  125 0000007C 4922            LDR              R1, =ANGLE
  126 0000007E         
  127 0000007E         skip_add_turn
  128 0000007E 600A            STR              R2, [R1]
  129 00000080         
  130 00000080 E030            B                display_number
  131 00000082         positive
  132 00000082         
  133 00000082 4920            LDR              R1, =APOLARITY ;Verifica polari
                                                            dade: 0 = positivo,
                                                             1 = negativo
  134 00000084 680A            LDR              R2, [R1]
  135 00000086 2A00            CMP              R2, #0
  136 00000088 D00F            BEQ              positiveAngle
  137 0000008A         
  138 0000008A 491F            LDR              R1, =ANGLE  ;Faz a subtração 
                                                            do angulo, porque o
                                                             angulo é negativo
                                                             e incremento posit
                                                            ivo
  139 0000008C 680A            LDR              R2, [R1]
  140 0000008E 4620            MOV              R0, R4
  141 00000090 EBA2 0200       SUB              R2, R0      ;Verifica se houve 
                                                            mudança de sinal
  142 00000094 2A00            CMP              R2, #0
  143 00000096 DA05            BGE              skip_inverse_apolarity2
  144 00000098         
  145 00000098 491A            LDR              R1, =APOLARITY ;Transforma a po
                                                            laridade em positiv
                                                            a porque houve muda
                                                            nça de sinal
  146 0000009A F04F 0300       MOV              R3, #0
  147 0000009E 600B            STR              R3, [R1]
  148 000000A0         
  149 000000A0 F1C2 0200       NEG              R2, R2      ;Inverte o sinal do
                                                             angulo para sempre
                                                             ser positivo
  150 000000A4         
  151 000000A4         skip_inverse_apolarity2
  152 000000A4 4918            LDR              R1, =ANGLE
  153 000000A6 600A            STR              R2, [R1]
  154 000000A8         
  155 000000A8 E01C            B                display_number
  156 000000AA         
  157 000000AA         positiveAngle
  158 000000AA 4917            LDR              R1, =ANGLE  ;Faz a soma do angu
                                                            lo, porque o angulo
                                                             é positivo e incr
                                                            emento positivo
  159 000000AC 680A            LDR              R2, [R1]
  160 000000AE 4620            MOV              R0, R4
  161 000000B0 4402            ADD              R2, R0



ARM Macro Assembler    Page 5 


  162 000000B2         
  163 000000B2 F5B2 7FB4       CMP              R2, #360    ;Verifica se bateu 
                                                            uma volta
  164 000000B6 D313            BLO              skip_add_turn2
  165 000000B8         
  166 000000B8 4914            LDR              R1, =TPOLARITY ;Verifica polari
                                                            dade: 0 = positivo,
                                                             1 = negativo
  167 000000BA 680B            LDR              R3, [R1]    ;Se a polaridade fo
                                                            r positiva, somar m
                                                            ais um, se for nega
                                                            tiva, subtrair um
  168 000000BC 4914            LDR              R1, =TURN
  169 000000BE 680D            LDR              R5, [R1]
  170 000000C0 2B00            CMP              R3, #0
  171 000000C2 BF0C            ITE              EQ
  172 000000C4 3501            ADDEQ            R5, #1
  173 000000C6 3D01            SUBNE            R5, #1      ;Verificar se as vo
                                                            ltas subiram para u
                                                            m valor positivo
  174 000000C8         
  175 000000C8 2D00            CMP              R5, #0
  176 000000CA 4910            LDR              R1, =TPOLARITY
  177 000000CC F04F 0600       MOV              R6, #0
  178 000000D0 BFBC            ITT              LT          ;Se subiu para valo
                                                            r positivo, coloco 
                                                            positivo a volta e 
                                                            mudo a polaridade
  179 000000D2 426D            NEGLT            R5, R5
  180 000000D4 600E            STRLT            R6, [R1]
  181 000000D6         
  182 000000D6 490E            LDR              R1, =TURN
  183 000000D8 600D            STR              R5, [R1]
  184 000000DA         
  185 000000DA F5A2 72B4       SUB              R2, #360
  186 000000DE 490A            LDR              R1, =ANGLE
  187 000000E0         
  188 000000E0         skip_add_turn2
  189 000000E0 600A            STR              R2, [R1]
  190 000000E2         
  191 000000E2 E7FF            B                display_number
  192 000000E4         
  193 000000E4         display_number
  194 000000E4         
  195 000000E4 4620            MOV              R0, R4
  196 000000E6 F7FF FFFE       BL               LCD_Display_Number 
                                                            ; Chama função C
  197 000000EA F04F 00DF       LDR              R0, =char_angle
  198 000000EE F7FF FFFE       BL               LCD_Display_Character
  199 000000F2         
  200 000000F2 F44F 727A       MOV              R2, #1000
  201 000000F6 F7FF FFFE       BL               SysTick_Wait1ms
  202 000000FA         
  203 000000FA F85D EB04       POP              {LR}
  204 000000FE 4770            BX               LR
  205 00000100         
  206 00000100         ;-------------------------------------------------------
                       ---------------
  207 00000100         



ARM Macro Assembler    Page 6 


  208 00000100                 ALIGN
  209 00000100                 END
              20020004 
              2003000C 
              20030000 
              20030010 
              20030004 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\motor.d -o.\objects\motor.o -IC:\Users\Ricar\AppDa
ta\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EV
AL SETA 1" --predefine="__UVISION_VERSION SETA 536" --predefine="TM4C1294NCPDT 
SETA 1" --list=.\listings\motor.lst motor.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 27 in file motor.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 38 in file motor.s
   Uses
      None
Comment: .text unused
calculate_angle_turn 00000000

Symbol: calculate_angle_turn
   Definitions
      At line 54 in file motor.s
   Uses
      At line 40 in file motor.s
Comment: calculate_angle_turn used once
display_number 000000E4

Symbol: display_number
   Definitions
      At line 193 in file motor.s
   Uses
      At line 94 in file motor.s
      At line 130 in file motor.s
      At line 155 in file motor.s
      At line 191 in file motor.s

negativeAngle 00000048

Symbol: negativeAngle
   Definitions
      At line 96 in file motor.s
   Uses
      At line 75 in file motor.s
Comment: negativeAngle used once
positive 00000082

Symbol: positive
   Definitions
      At line 131 in file motor.s
   Uses
      At line 67 in file motor.s
Comment: positive used once
positiveAngle 000000AA

Symbol: positiveAngle
   Definitions
      At line 157 in file motor.s
   Uses
      At line 136 in file motor.s
Comment: positiveAngle used once
skip_add_turn 0000007E

Symbol: skip_add_turn
   Definitions
      At line 127 in file motor.s
   Uses
      At line 103 in file motor.s
Comment: skip_add_turn used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

skip_add_turn2 000000E0

Symbol: skip_add_turn2
   Definitions
      At line 188 in file motor.s
   Uses
      At line 164 in file motor.s
Comment: skip_add_turn2 used once
skip_inverse_apolarity1 00000042

Symbol: skip_inverse_apolarity1
   Definitions
      At line 90 in file motor.s
   Uses
      At line 82 in file motor.s
Comment: skip_inverse_apolarity1 used once
skip_inverse_apolarity2 000000A4

Symbol: skip_inverse_apolarity2
   Definitions
      At line 151 in file motor.s
   Uses
      At line 143 in file motor.s
Comment: skip_inverse_apolarity2 used once
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ANGLE 20030000

Symbol: ANGLE
   Definitions
      At line 17 in file motor.s
   Uses
      At line 77 in file motor.s
      At line 91 in file motor.s
      At line 97 in file motor.s
      At line 125 in file motor.s
      At line 138 in file motor.s
      At line 152 in file motor.s
      At line 158 in file motor.s
      At line 186 in file motor.s

APOLARITY 2003000C

Symbol: APOLARITY
   Definitions
      At line 20 in file motor.s
   Uses
      At line 72 in file motor.s
      At line 84 in file motor.s
      At line 133 in file motor.s
      At line 145 in file motor.s

CURR_KEY 20020004

Symbol: CURR_KEY
   Definitions
      At line 16 in file motor.s
   Uses
      At line 57 in file motor.s
      At line 64 in file motor.s

MODE 20030008

Symbol: MODE
   Definitions
      At line 19 in file motor.s
   Uses
      None
Comment: MODE unused
TPOLARITY 20030010

Symbol: TPOLARITY
   Definitions
      At line 21 in file motor.s
   Uses
      At line 105 in file motor.s
      At line 115 in file motor.s
      At line 166 in file motor.s
      At line 176 in file motor.s

TURN 20030004

Symbol: TURN
   Definitions
      At line 18 in file motor.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 107 in file motor.s
      At line 121 in file motor.s
      At line 168 in file motor.s
      At line 182 in file motor.s

char_angle 000000DF

Symbol: char_angle
   Definitions
      At line 23 in file motor.s
   Uses
      At line 197 in file motor.s
Comment: char_angle used once
char_minus 0000002D

Symbol: char_minus
   Definitions
      At line 22 in file motor.s
   Uses
      At line 69 in file motor.s
Comment: char_minus used once
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

LCD_Display_Character 00000000

Symbol: LCD_Display_Character
   Definitions
      At line 46 in file motor.s
   Uses
      At line 70 in file motor.s
      At line 198 in file motor.s

LCD_Display_Number 00000000

Symbol: LCD_Display_Number
   Definitions
      At line 45 in file motor.s
   Uses
      At line 196 in file motor.s
Comment: LCD_Display_Number used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 42 in file motor.s
   Uses
      At line 201 in file motor.s
Comment: SysTick_Wait1ms used once
angle_decoder 00000000

Symbol: angle_decoder
   Definitions
      At line 47 in file motor.s
   Uses
      At line 59 in file motor.s
Comment: angle_decoder used once
create_data_row 00000000

Symbol: create_data_row
   Definitions
      At line 43 in file motor.s
   Uses
      None
Comment: create_data_row unused
create_increment_row 00000000

Symbol: create_increment_row
   Definitions
      At line 44 in file motor.s
   Uses
      At line 62 in file motor.s
Comment: create_increment_row used once
6 symbols
361 symbols in table
