


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Este programa espera o usuario apertar a chave USR_SW1
                        e/ou a chave USR_SW2.
    4 00000000         ; Caso o usuario pressione a chave USR_SW1, acendera o L
                       ED3 (PF4). Caso o usuario pressione 
    5 00000000         ; a chave USR_SW2, acendera o LED4 (PF0). Caso as duas c
                       haves sejam pressionadas, os dois 
    6 00000000         ; LEDs acendem.
    7 00000000         
    8 00000000         ; ------------------------------------------------------
                       -------------------------
    9 00000000                 THUMB                        ; Instrucoes do tip
                                                            o Thumb-2
   10 00000000         ; ------------------------------------------------------
                       -------------------------
   11 00000000         ; Declaracoes EQU - Defines
   12 00000000         ;<NOME>         EQU <VALOR>
   13 00000000         ; ========================
   14 00000000         ; ~~~~~~~~~~~~~ OTHER CONSTANTS ~~~~~~~~~~~~~~F
   15 00000000 20010000 
                       Timer0A_Addr
                               EQU              0x20010000
   16 00000000 20010004 
                       Timer1A_Addr
                               EQU              0x20010004
   17 00000000 20020000 
                       PREV_KEYPRESS
                               EQU              0x20020000
   18 00000000 20020004 
                       CURR_KEY
                               EQU              0x20020004
   19 00000000 20030000 
                       ANGLE   EQU              0x20030000
   20 00000000 20030004 
                       TURN    EQU              0x20030004
   21 00000000 20030008 
                       MODE    EQU              0x20030008
   22 00000000 2003000C 
                       APOLARITY
                               EQU              0x2003000C
   23 00000000 20030010 
                       TPOLARITY
                               EQU              0x20030010
   24 00000000 0000002D 
                       char_minus
                               EQU              2_00101101
   25 00000000 000000DF 
                       char_angle
                               EQU              2_11011111
   26 00000000         
   27 00000000         ; ------------------------------------------------------
                       -------------------------
   28 00000000         ; Area de Dados - Declaracoes de variaveis
   29 00000000                 AREA             DATA, ALIGN=2
   30 00000000         ; Se alguma variavel for chamada em outro arquivo
   31 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riavel <var> a 
   32 00000000         ; partir de outro arquivo



ARM Macro Assembler    Page 2 


   33 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variavel de nome <var>
   34 00000000         ; de <tam> bytes a partir da primeira 
   35 00000000         ; posicao da RAM  
   36 00000000         
   37 00000000         ; ------------------------------------------------------
                       -------------------------
   38 00000000         ; Area de Codigo - Tudo abaixo da diretiva a seguir sera
                        armazenado na memoria de 
   39 00000000         ;                  codigo
   40 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   41 00000000         
   42 00000000         ; Se alguma funcao do arquivo for chamada em outro arqui
                       vo 
   43 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            funcao Start a part
                                                            ir de 
   44 00000000         ; outro arquivo. No caso startup.s
   45 00000000         
   46 00000000         ; Se chamar alguma funcao externa 
   47 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   48 00000000         ; funcao <func>
   49 00000000                 IMPORT           PLL_Init
   50 00000000                 IMPORT           SysTick_Init
   51 00000000                 IMPORT           SysTick_Wait1us
   52 00000000                 IMPORT           SysTick_Wait1ms
   53 00000000                 IMPORT           GPIO_Init
   54 00000000                 IMPORT           LCD_Init
   55 00000000                 IMPORT           Timers_Init
   56 00000000                 IMPORT           Interrupt_Init
   57 00000000         
   58 00000000                 IMPORT           TecladoM_Poll
   59 00000000                 IMPORT           Timer0A_Handler
   60 00000000                 IMPORT           create_data_row
   61 00000000                 IMPORT           create_increment_row
   62 00000000         
   63 00000000                 IMPORT           LCD_Display_Number
   64 00000000                 IMPORT           LCD_Display_Character
   65 00000000         
   66 00000000                 IMPORT           angle_decoder
   67 00000000         
   68 00000000         ; ------------------------------------------------------
                       -------------------------
   69 00000000         ; Funcao main()
   70 00000000         Start
   71 00000000 F7FF FFFE       BL               PLL_Init    ;Subrotina para alt
                                                            erar o clock do mic
                                                            rocontrolador para 
                                                            80MHz
   72 00000004 F7FF FFFE       BL               SysTick_Init ;
   73 00000008 F7FF FFFE       BL               GPIO_Init   ;Subrotina que inic
                                                            ializa os GPIO
   74 0000000C F7FF FFFE       BL               LCD_Init    ;Subrotina que inic
                                                            ializa o LCD
   75 00000010 F7FF FFFE       BL               Timers_Init ;Subrotina que inic
                                                            ializa o Timer0A
   76 00000014 F7FF FFFE       BL               Interrupt_Init ;Subrotina que i



ARM Macro Assembler    Page 3 


                                                            nicializa os Interr
                                                            upts de GPIO
   77 00000018         
   78 00000018 F04F 0100       MOV              R1, #0      ;Inicialização do
                                                             angulo, das voltas
                                                            , do modo e das pol
                                                            aridades
   79 0000001C 4830            LDR              R0, =ANGLE
   80 0000001E 6001            STR              R1, [R0]
   81 00000020 4830            LDR              R0, =TURN
   82 00000022 6001            STR              R1, [R0]
   83 00000024 4830            LDR              R0, =MODE
   84 00000026 6001            STR              R1, [R0]
   85 00000028 4830            LDR              R0, =APOLARITY
   86 0000002A 6001            STR              R1, [R0]
   87 0000002C 4830            LDR              R0, =TPOLARITY
   88 0000002E 6001            STR              R1, [R0]
   89 00000030         
   90 00000030 F7FF FFFE       BL               create_data_row
   91 00000034         
   92 00000034 482F            LDR              R0, =PREV_KEYPRESS
   93 00000036 F04F 0110       MOV              R1, #0x10
   94 0000003A 6001            STR              R1, [R0]
   95 0000003C         
   96 0000003C 482E            LDR              R0, =CURR_KEY
   97 0000003E F04F 0100       MOV              R1, #0
   98 00000042 6001            STR              R1, [R0]
   99 00000044         
  100 00000044         ; ------------------------------------------------------
                       -------------------------
  101 00000044         ; Laco principal
  102 00000044         ; R1 = valor da tecla pressionada
  103 00000044         
  104 00000044         
  105 00000044         MainLoop
  106 00000044 482D            LDR              R0, =Timer0A_Addr
  107 00000046 6801            LDR              R1, [R0]
  108 00000048 2901            CMP              R1, #1
  109 0000004A D004            BEQ              update_data_timer0
  110 0000004C         
  111 0000004C 482C            LDR              R0, =Timer1A_Addr
  112 0000004E 6801            LDR              R1, [R0]
  113 00000050 2901            CMP              R1, #1
  114 00000052 D03E            BEQ              update_data_timer1
  115 00000054         
  116 00000054         
  117 00000054 E7F6            B                MainLoop    ;Volta para o laco 
                                                            principal
  118 00000056         
  119 00000056         
  120 00000056         update_data_timer0
  121 00000056 4829            LDR              R0, =Timer0A_Addr
  122 00000058 F04F 0100       MOV              R1, #0
  123 0000005C 6001            STR              R1, [R0]
  124 0000005E         
  125 0000005E F7FF FFFE       BL               TecladoM_Poll
  126 00000062         
  127 00000062 4824            LDR              R0, =PREV_KEYPRESS ; Recupera o
                                                             último click e ar



ARM Macro Assembler    Page 4 


                                                            mazena o atual
  128 00000064 6802            LDR              R2, [R0]
  129 00000066 6001            STR              R1, [R0]
  130 00000068         
  131 00000068 2A10            CMP              R2, #0x10   ; Pula se a última
                                                             tecla for 0x10
  132 0000006A D037            BEQ              skip
  133 0000006C         
  134 0000006C 2910            CMP              R1, #0x10   ; Detecta falling-e
                                                            dge da tecla
  135 0000006E D135            BNE              skip
  136 00000070         
  137 00000070 F002 01FF       AND              R1, R2, #0xFF ; Filtra os 8 LSB
                                                             de R2
  138 00000074 2931            CMP              R1, #0x31   ; Verifica se a tec
                                                            la pressionada esta
                                                             entre 1 e C
  139 00000076 D331            BLO              skip
  140 00000078         
  141 00000078 2943            CMP              R1, #0x43
  142 0000007A D82F            BHI              skip
  143 0000007C         
  144 0000007C 481E            LDR              R0, =CURR_KEY ; Atualiza a tecl
                                                            a atual
  145 0000007E 6001            STR              R1, [R0]
  146 00000080         
  147 00000080 491D            LDR              R1, =CURR_KEY
  148 00000082 6808            LDR              R0, [R1]
  149 00000084 F7FF FFFE       BL               angle_decoder
  150 00000088 4604            MOV              R4, R0
  151 0000008A         
  152 0000008A F7FF FFFE       BL               create_increment_row
  153 0000008E         
  154 0000008E 491A            LDR              R1, =CURR_KEY
  155 00000090 6808            LDR              R0, [R1]
  156 00000092 2837            CMP              R0, #0x37
  157 00000094 D30A            BLO              positive
  158 00000096         
  159 00000096 F04F 002D       LDR              R0, =char_minus ;Valor negativo
                                                             de incremento, sub
                                                            trair do angulo tot
                                                            al
  160 0000009A F7FF FFFE       BL               LCD_Display_Character
  161 0000009E         
  162 0000009E 4910            LDR              R1, =ANGLE
  163 000000A0 680A            LDR              R2, [R1]
  164 000000A2 4620            MOV              R0, R4
  165 000000A4 EBA2 0200       SUB              R2, R0
  166 000000A8 600A            STR              R2, [R1]
  167 000000AA         
  168 000000AA E004            B                skip_positive_sum
  169 000000AC         positive
  170 000000AC         
  171 000000AC 490C            LDR              R1, =ANGLE
  172 000000AE 680A            LDR              R2, [R1]
  173 000000B0 4620            MOV              R0, R4
  174 000000B2 4402            ADD              R2, R0
  175 000000B4 600A            STR              R2, [R1]
  176 000000B6         



ARM Macro Assembler    Page 5 


  177 000000B6         skip_positive_sum
  178 000000B6         
  179 000000B6 4620            MOV              R0, R4
  180 000000B8 F7FF FFFE       BL               LCD_Display_Number 
                                                            ; Chama função C
  181 000000BC F04F 00DF       LDR              R0, =char_angle
  182 000000C0 F7FF FFFE       BL               LCD_Display_Character
  183 000000C4         
  184 000000C4 F44F 727A       MOV              R2, #1000
  185 000000C8 F7FF FFFE       BL               SysTick_Wait1ms
  186 000000CC         
  187 000000CC         
  188 000000CC         
  189 000000CC         
  190 000000CC F7FF FFFE       BL               create_data_row
  191 000000D0         
  192 000000D0 E004            B                skip
  193 000000D2         
  194 000000D2         update_data_timer1
  195 000000D2 480B            LDR              R0, =Timer1A_Addr ; Zera o bit 
                                                            do endereço do int
                                                            errupt do timer 1
  196 000000D4 F04F 0100       MOV              R1, #0
  197 000000D8 6001            STR              R1, [R0]
  198 000000DA         
  199 000000DA E7FF            B                skip
  200 000000DC         
  201 000000DC         skip
  202 000000DC E7B2            B                MainLoop
  203 000000DE         
  204 000000DE 00 00           ALIGN                        ;Garante que o fim 
                                                            da secao esta alinh
                                                            ada 
  205 000000E0                 END                          ;Fim do arquivo
              20030000 
              20030004 
              20030008 
              2003000C 
              20030010 
              20020000 
              20020004 
              20010000 
              20010004 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\main.d -o.\objects\main.o -IC:\Users\Ricar\AppData
\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL
 SETA 1" --predefine="__UVISION_VERSION SETA 536" --predefine="TM4C1294NCPDT SE
TA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 29 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 40 in file main.s
   Uses
      None
Comment: .text unused
MainLoop 00000044

Symbol: MainLoop
   Definitions
      At line 105 in file main.s
   Uses
      At line 117 in file main.s
      At line 202 in file main.s

Start 00000000

Symbol: Start
   Definitions
      At line 70 in file main.s
   Uses
      At line 43 in file main.s
Comment: Start used once
positive 000000AC

Symbol: positive
   Definitions
      At line 169 in file main.s
   Uses
      At line 157 in file main.s
Comment: positive used once
skip 000000DC

Symbol: skip
   Definitions
      At line 201 in file main.s
   Uses
      At line 132 in file main.s
      At line 135 in file main.s
      At line 139 in file main.s
      At line 142 in file main.s
      At line 192 in file main.s
      At line 199 in file main.s

skip_positive_sum 000000B6

Symbol: skip_positive_sum
   Definitions
      At line 177 in file main.s
   Uses
      At line 168 in file main.s
Comment: skip_positive_sum used once
update_data_timer0 00000056

Symbol: update_data_timer0
   Definitions
      At line 120 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 109 in file main.s
Comment: update_data_timer0 used once
update_data_timer1 000000D2

Symbol: update_data_timer1
   Definitions
      At line 194 in file main.s
   Uses
      At line 114 in file main.s
Comment: update_data_timer1 used once
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ANGLE 20030000

Symbol: ANGLE
   Definitions
      At line 19 in file main.s
   Uses
      At line 79 in file main.s
      At line 162 in file main.s
      At line 171 in file main.s

APOLARITY 2003000C

Symbol: APOLARITY
   Definitions
      At line 22 in file main.s
   Uses
      At line 85 in file main.s
Comment: APOLARITY used once
CURR_KEY 20020004

Symbol: CURR_KEY
   Definitions
      At line 18 in file main.s
   Uses
      At line 96 in file main.s
      At line 144 in file main.s
      At line 147 in file main.s
      At line 154 in file main.s

MODE 20030008

Symbol: MODE
   Definitions
      At line 21 in file main.s
   Uses
      At line 83 in file main.s
Comment: MODE used once
PREV_KEYPRESS 20020000

Symbol: PREV_KEYPRESS
   Definitions
      At line 17 in file main.s
   Uses
      At line 92 in file main.s
      At line 127 in file main.s

TPOLARITY 20030010

Symbol: TPOLARITY
   Definitions
      At line 23 in file main.s
   Uses
      At line 87 in file main.s
Comment: TPOLARITY used once
TURN 20030004

Symbol: TURN
   Definitions
      At line 20 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 81 in file main.s
Comment: TURN used once
Timer0A_Addr 20010000

Symbol: Timer0A_Addr
   Definitions
      At line 15 in file main.s
   Uses
      At line 106 in file main.s
      At line 121 in file main.s

Timer1A_Addr 20010004

Symbol: Timer1A_Addr
   Definitions
      At line 16 in file main.s
   Uses
      At line 111 in file main.s
      At line 195 in file main.s

char_angle 000000DF

Symbol: char_angle
   Definitions
      At line 25 in file main.s
   Uses
      At line 181 in file main.s
Comment: char_angle used once
char_minus 0000002D

Symbol: char_minus
   Definitions
      At line 24 in file main.s
   Uses
      At line 159 in file main.s
Comment: char_minus used once
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 53 in file main.s
   Uses
      At line 73 in file main.s
Comment: GPIO_Init used once
Interrupt_Init 00000000

Symbol: Interrupt_Init
   Definitions
      At line 56 in file main.s
   Uses
      At line 76 in file main.s
Comment: Interrupt_Init used once
LCD_Display_Character 00000000

Symbol: LCD_Display_Character
   Definitions
      At line 64 in file main.s
   Uses
      At line 160 in file main.s
      At line 182 in file main.s

LCD_Display_Number 00000000

Symbol: LCD_Display_Number
   Definitions
      At line 63 in file main.s
   Uses
      At line 180 in file main.s
Comment: LCD_Display_Number used once
LCD_Init 00000000

Symbol: LCD_Init
   Definitions
      At line 54 in file main.s
   Uses
      At line 74 in file main.s
Comment: LCD_Init used once
PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 49 in file main.s
   Uses
      At line 71 in file main.s
Comment: PLL_Init used once
SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 50 in file main.s
   Uses
      At line 72 in file main.s
Comment: SysTick_Init used once
SysTick_Wait1ms 00000000




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

Symbol: SysTick_Wait1ms
   Definitions
      At line 52 in file main.s
   Uses
      At line 185 in file main.s
Comment: SysTick_Wait1ms used once
SysTick_Wait1us 00000000

Symbol: SysTick_Wait1us
   Definitions
      At line 51 in file main.s
   Uses
      None
Comment: SysTick_Wait1us unused
TecladoM_Poll 00000000

Symbol: TecladoM_Poll
   Definitions
      At line 58 in file main.s
   Uses
      At line 125 in file main.s
Comment: TecladoM_Poll used once
Timer0A_Handler 00000000

Symbol: Timer0A_Handler
   Definitions
      At line 59 in file main.s
   Uses
      None
Comment: Timer0A_Handler unused
Timers_Init 00000000

Symbol: Timers_Init
   Definitions
      At line 55 in file main.s
   Uses
      At line 75 in file main.s
Comment: Timers_Init used once
angle_decoder 00000000

Symbol: angle_decoder
   Definitions
      At line 66 in file main.s
   Uses
      At line 149 in file main.s
Comment: angle_decoder used once
create_data_row 00000000

Symbol: create_data_row
   Definitions
      At line 60 in file main.s
   Uses
      At line 90 in file main.s
      At line 190 in file main.s

create_increment_row 00000000

Symbol: create_increment_row
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

      At line 61 in file main.s
   Uses
      At line 152 in file main.s
Comment: create_increment_row used once
15 symbols
371 symbols in table
