


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Este programa espera o usuario apertar a chave USR_SW1
                        e/ou a chave USR_SW2.
    4 00000000         ; Caso o usuario pressione a chave USR_SW1, acendera o L
                       ED3 (PF4). Caso o usuario pressione 
    5 00000000         ; a chave USR_SW2, acendera o LED4 (PF0). Caso as duas c
                       haves sejam pressionadas, os dois 
    6 00000000         ; LEDs acendem.
    7 00000000         
    8 00000000         ; ------------------------------------------------------
                       -------------------------
    9 00000000                 THUMB                        ; Instrucoes do tip
                                                            o Thumb-2
   10 00000000         ; ------------------------------------------------------
                       -------------------------
   11 00000000         ; Declaracoes EQU - Defines
   12 00000000         ;<NOME>         EQU <VALOR>
   13 00000000         ; ========================
   14 00000000         ; ~~~~~~~~~~~~~ OTHER CONSTANTS ~~~~~~~~~~~~~~F
   15 00000000 20010000 
                       Timer0A_Addr
                               EQU              0x20010000
   16 00000000 20010004 
                       Timer1A_Addr
                               EQU              0x20010004
   17 00000000 20020000 
                       PREV_KEYPRESS
                               EQU              0x20020000
   18 00000000 20020004 
                       CURR_KEY
                               EQU              0x20020004
   19 00000000 20030000 
                       ANGLE   EQU              0x20030000
   20 00000000 20030004 
                       TURN    EQU              0x20030004
   21 00000000 20030008 
                       MODE    EQU              0x20030008
   22 00000000 2003000C 
                       APOLARITY
                               EQU              0x2003000C
   23 00000000 20030010 
                       TPOLARITY
                               EQU              0x20030010
   24 00000000 0000002D 
                       char_minus
                               EQU              2_00101101
   25 00000000 000000DF 
                       char_angle
                               EQU              2_11011111
   26 00000000         
   27 00000000         ; ------------------------------------------------------
                       -------------------------
   28 00000000         ; Area de Dados - Declaracoes de variaveis
   29 00000000                 AREA             DATA, ALIGN=2
   30 00000000         ; Se alguma variavel for chamada em outro arquivo
   31 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riavel <var> a 
   32 00000000         ; partir de outro arquivo



ARM Macro Assembler    Page 2 


   33 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variavel de nome <var>
   34 00000000         ; de <tam> bytes a partir da primeira 
   35 00000000         ; posicao da RAM  
   36 00000000         
   37 00000000         ; ------------------------------------------------------
                       -------------------------
   38 00000000         ; Area de Codigo - Tudo abaixo da diretiva a seguir sera
                        armazenado na memoria de 
   39 00000000         ;                  codigo
   40 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   41 00000000         
   42 00000000         ; Se alguma funcao do arquivo for chamada em outro arqui
                       vo 
   43 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            funcao Start a part
                                                            ir de 
   44 00000000         ; outro arquivo. No caso startup.s
   45 00000000         
   46 00000000         ; Se chamar alguma funcao externa 
   47 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   48 00000000         ; funcao <func>
   49 00000000                 IMPORT           PLL_Init
   50 00000000                 IMPORT           SysTick_Init
   51 00000000                 IMPORT           SysTick_Wait1us
   52 00000000                 IMPORT           SysTick_Wait1ms
   53 00000000                 IMPORT           GPIO_Init
   54 00000000                 IMPORT           LCD_Init
   55 00000000                 IMPORT           Timers_Init
   56 00000000                 IMPORT           Interrupt_Init
   57 00000000         
   58 00000000                 IMPORT           TecladoM_Poll
   59 00000000                 IMPORT           Timer0A_Handler
   60 00000000                 IMPORT           create_data_row
   61 00000000                 IMPORT           calculate_angle_turn
   62 00000000         
   63 00000000         ; ------------------------------------------------------
                       -------------------------
   64 00000000         ; Funcao main()
   65 00000000         Start
   66 00000000 F7FF FFFE       BL               PLL_Init    ;Subrotina para alt
                                                            erar o clock do mic
                                                            rocontrolador para 
                                                            80MHz
   67 00000004 F7FF FFFE       BL               SysTick_Init ;
   68 00000008 F7FF FFFE       BL               GPIO_Init   ;Subrotina que inic
                                                            ializa os GPIO
   69 0000000C F7FF FFFE       BL               LCD_Init    ;Subrotina que inic
                                                            ializa o LCD
   70 00000010 F7FF FFFE       BL               Timers_Init ;Subrotina que inic
                                                            ializa o Timer0A
   71 00000014 F7FF FFFE       BL               Interrupt_Init ;Subrotina que i
                                                            nicializa os Interr
                                                            upts de GPIO
   72 00000018         
   73 00000018 F04F 0100       MOV              R1, #0      ;Inicialização do
                                                             angulo, das voltas



ARM Macro Assembler    Page 3 


                                                            , do modo e das pol
                                                            aridades
   74 0000001C 481E            LDR              R0, =ANGLE
   75 0000001E 6001            STR              R1, [R0]
   76 00000020 481E            LDR              R0, =TURN
   77 00000022 6001            STR              R1, [R0]
   78 00000024 481E            LDR              R0, =MODE
   79 00000026 6001            STR              R1, [R0]
   80 00000028 481E            LDR              R0, =APOLARITY
   81 0000002A 6001            STR              R1, [R0]
   82 0000002C 481E            LDR              R0, =TPOLARITY
   83 0000002E 6001            STR              R1, [R0]
   84 00000030         
   85 00000030 F7FF FFFE       BL               create_data_row
   86 00000034         
   87 00000034 481D            LDR              R0, =PREV_KEYPRESS
   88 00000036 F04F 0110       MOV              R1, #0x10
   89 0000003A 6001            STR              R1, [R0]
   90 0000003C         
   91 0000003C 481C            LDR              R0, =CURR_KEY
   92 0000003E F04F 0100       MOV              R1, #0
   93 00000042 6001            STR              R1, [R0]
   94 00000044         
   95 00000044         ; ------------------------------------------------------
                       -------------------------
   96 00000044         ; Laco principal
   97 00000044         ; R1 = valor da tecla pressionada
   98 00000044         
   99 00000044         
  100 00000044         MainLoop
  101 00000044 481B            LDR              R0, =Timer0A_Addr
  102 00000046 6801            LDR              R1, [R0]
  103 00000048 2901            CMP              R1, #1
  104 0000004A D004            BEQ              update_data_timer0
  105 0000004C         
  106 0000004C 481A            LDR              R0, =Timer1A_Addr
  107 0000004E 6801            LDR              R1, [R0]
  108 00000050 2901            CMP              R1, #1
  109 00000052 D01A            BEQ              update_data_timer1
  110 00000054         
  111 00000054         
  112 00000054 E7F6            B                MainLoop    ;Volta para o laco 
                                                            principal
  113 00000056         
  114 00000056         
  115 00000056         update_data_timer0
  116 00000056 4817            LDR              R0, =Timer0A_Addr
  117 00000058 F04F 0100       MOV              R1, #0
  118 0000005C 6001            STR              R1, [R0]
  119 0000005E         
  120 0000005E F7FF FFFE       BL               TecladoM_Poll
  121 00000062         
  122 00000062 4812            LDR              R0, =PREV_KEYPRESS ; Recupera o
                                                             último click e ar
                                                            mazena o atual
  123 00000064 6802            LDR              R2, [R0]
  124 00000066 6001            STR              R1, [R0]
  125 00000068         
  126 00000068 2A10            CMP              R2, #0x10   ; Pula se a última



ARM Macro Assembler    Page 4 


                                                             tecla for 0x10
  127 0000006A D013            BEQ              skip
  128 0000006C         
  129 0000006C 2910            CMP              R1, #0x10   ; Detecta falling-e
                                                            dge da tecla
  130 0000006E D111            BNE              skip
  131 00000070         
  132 00000070 F002 01FF       AND              R1, R2, #0xFF ; Filtra os 8 LSB
                                                             de R2
  133 00000074 2931            CMP              R1, #0x31   ; Verifica se a tec
                                                            la pressionada esta
                                                             entre 1 e C
  134 00000076 D30D            BLO              skip
  135 00000078         
  136 00000078 2943            CMP              R1, #0x43
  137 0000007A D80B            BHI              skip
  138 0000007C         
  139 0000007C 480C            LDR              R0, =CURR_KEY ; Atualiza a tecl
                                                            a atual
  140 0000007E 6001            STR              R1, [R0]
  141 00000080         
  142 00000080 F7FF FFFE       BL               calculate_angle_turn
  143 00000084         
  144 00000084         
  145 00000084 F7FF FFFE       BL               create_data_row
  146 00000088         
  147 00000088 E004            B                skip
  148 0000008A         
  149 0000008A         update_data_timer1
  150 0000008A 480B            LDR              R0, =Timer1A_Addr ; Zera o bit 
                                                            do endereço do int
                                                            errupt do timer 1
  151 0000008C F04F 0100       MOV              R1, #0
  152 00000090 6001            STR              R1, [R0]
  153 00000092         
  154 00000092 E7FF            B                skip
  155 00000094         
  156 00000094         skip
  157 00000094 E7D6            B                MainLoop
  158 00000096         
  159 00000096 00 00           ALIGN                        ;Garante que o fim 
                                                            da secao esta alinh
                                                            ada 
  160 00000098                 END                          ;Fim do arquivo
              20030000 
              20030004 
              20030008 
              2003000C 
              20030010 
              20020000 
              20020004 
              20010000 
              20010004 
Command Line: --debug --xref --diag_suppress=9931,A1950W --cpu=Cortex-M4.fp.sp 
--depend=.\objects\main.d -o.\objects\main.o -IC:\Users\Ricar\AppData\Local\Arm
\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL SETA 1" -
-predefine="__UVISION_VERSION SETA 541" --predefine="TM4C1294NCPDT SETA 1" --li
st=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 29 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 40 in file main.s
   Uses
      None
Comment: .text unused
MainLoop 00000044

Symbol: MainLoop
   Definitions
      At line 100 in file main.s
   Uses
      At line 112 in file main.s
      At line 157 in file main.s

Start 00000000

Symbol: Start
   Definitions
      At line 65 in file main.s
   Uses
      At line 43 in file main.s
Comment: Start used once
skip 00000094

Symbol: skip
   Definitions
      At line 156 in file main.s
   Uses
      At line 127 in file main.s
      At line 130 in file main.s
      At line 134 in file main.s
      At line 137 in file main.s
      At line 147 in file main.s
      At line 154 in file main.s

update_data_timer0 00000056

Symbol: update_data_timer0
   Definitions
      At line 115 in file main.s
   Uses
      At line 104 in file main.s
Comment: update_data_timer0 used once
update_data_timer1 0000008A

Symbol: update_data_timer1
   Definitions
      At line 149 in file main.s
   Uses
      At line 109 in file main.s
Comment: update_data_timer1 used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ANGLE 20030000

Symbol: ANGLE
   Definitions
      At line 19 in file main.s
   Uses
      At line 74 in file main.s
Comment: ANGLE used once
APOLARITY 2003000C

Symbol: APOLARITY
   Definitions
      At line 22 in file main.s
   Uses
      At line 80 in file main.s
Comment: APOLARITY used once
CURR_KEY 20020004

Symbol: CURR_KEY
   Definitions
      At line 18 in file main.s
   Uses
      At line 91 in file main.s
      At line 139 in file main.s

MODE 20030008

Symbol: MODE
   Definitions
      At line 21 in file main.s
   Uses
      At line 78 in file main.s
Comment: MODE used once
PREV_KEYPRESS 20020000

Symbol: PREV_KEYPRESS
   Definitions
      At line 17 in file main.s
   Uses
      At line 87 in file main.s
      At line 122 in file main.s

TPOLARITY 20030010

Symbol: TPOLARITY
   Definitions
      At line 23 in file main.s
   Uses
      At line 82 in file main.s
Comment: TPOLARITY used once
TURN 20030004

Symbol: TURN
   Definitions
      At line 20 in file main.s
   Uses
      At line 76 in file main.s
Comment: TURN used once
Timer0A_Addr 20010000



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: Timer0A_Addr
   Definitions
      At line 15 in file main.s
   Uses
      At line 101 in file main.s
      At line 116 in file main.s

Timer1A_Addr 20010004

Symbol: Timer1A_Addr
   Definitions
      At line 16 in file main.s
   Uses
      At line 106 in file main.s
      At line 150 in file main.s

char_angle 000000DF

Symbol: char_angle
   Definitions
      At line 25 in file main.s
   Uses
      None
Comment: char_angle unused
char_minus 0000002D

Symbol: char_minus
   Definitions
      At line 24 in file main.s
   Uses
      None
Comment: char_minus unused
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 53 in file main.s
   Uses
      At line 68 in file main.s
Comment: GPIO_Init used once
Interrupt_Init 00000000

Symbol: Interrupt_Init
   Definitions
      At line 56 in file main.s
   Uses
      At line 71 in file main.s
Comment: Interrupt_Init used once
LCD_Init 00000000

Symbol: LCD_Init
   Definitions
      At line 54 in file main.s
   Uses
      At line 69 in file main.s
Comment: LCD_Init used once
PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 49 in file main.s
   Uses
      At line 66 in file main.s
Comment: PLL_Init used once
SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 50 in file main.s
   Uses
      At line 67 in file main.s
Comment: SysTick_Init used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 52 in file main.s
   Uses
      None
Comment: SysTick_Wait1ms unused
SysTick_Wait1us 00000000

Symbol: SysTick_Wait1us
   Definitions
      At line 51 in file main.s
   Uses
      None
Comment: SysTick_Wait1us unused
TecladoM_Poll 00000000

Symbol: TecladoM_Poll



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 58 in file main.s
   Uses
      At line 120 in file main.s
Comment: TecladoM_Poll used once
Timer0A_Handler 00000000

Symbol: Timer0A_Handler
   Definitions
      At line 59 in file main.s
   Uses
      None
Comment: Timer0A_Handler unused
Timers_Init 00000000

Symbol: Timers_Init
   Definitions
      At line 55 in file main.s
   Uses
      At line 70 in file main.s
Comment: Timers_Init used once
calculate_angle_turn 00000000

Symbol: calculate_angle_turn
   Definitions
      At line 61 in file main.s
   Uses
      At line 142 in file main.s
Comment: calculate_angle_turn used once
create_data_row 00000000

Symbol: create_data_row
   Definitions
      At line 60 in file main.s
   Uses
      At line 85 in file main.s
      At line 145 in file main.s

12 symbols
366 symbols in table
