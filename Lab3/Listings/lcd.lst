


ARM Macro Assembler    Page 1 


    1 00000000         ;lcd.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Jhony Minetto Araujo, Ricardo Marthus Gremmelmaier, Ro
                       drigo Wolsky Poli
    4 00000000         ; Ver 1 02/12/2024
    5 00000000         ; Ver 2 29/01/2025
    6 00000000         
    7 00000000         
    8 00000000         ; ------------------------------------------------------
                       -------------------------
    9 00000000                 PRESERVE8        {TRUE}
   10 00000000                 THUMB                        ; Instrucoes do tip
                                                            o Thumb-2
   11 00000000         ; ------------------------------------------------------
                       -------------------------
   12 00000000         ; Declaracoes EQU - Defines
   13 00000000         ; ========================
   14 00000000 400613FC 
                       GPIO_PORTK_DATA_R
                               EQU              0x400613FC
   15 00000000 400633FC 
                       GPIO_PORTM_DATA_R
                               EQU              0x400633FC
   16 00000000         
   17 00000000         
   18 00000000         ; ================== DEFINICAO DA TABELA ===============
                       ====
   19 00000000         
   20 00000000 00000030 
                       char_0  EQU              2_00110000
   21 00000000 00000031 
                       char_1  EQU              2_00110001
   22 00000000 00000032 
                       char_2  EQU              2_00110010
   23 00000000 00000033 
                       char_3  EQU              2_00110011
   24 00000000 00000034 
                       char_4  EQU              2_00110100
   25 00000000 00000035 
                       char_5  EQU              2_00110101
   26 00000000 00000036 
                       char_6  EQU              2_00110110
   27 00000000 00000037 
                       char_7  EQU              2_00110111
   28 00000000 00000038 
                       char_8  EQU              2_00111000
   29 00000000 00000039 
                       char_9  EQU              2_00111001
   30 00000000 000000A5 
                       char_cdot
                               EQU              2_10100101
   31 00000000 0000002E 
                       char_dot
                               EQU              2_00101110
   32 00000000 000000DF 
                       char_angle
                               EQU              2_11011111
   33 00000000 0000002B 
                       char_plus



ARM Macro Assembler    Page 2 


                               EQU              2_00101011
   34 00000000 0000002D 
                       char_minus
                               EQU              2_00101101
   35 00000000 00000020 
                       char_space
                               EQU              2_00100000
   36 00000000 0000003A 
                       char_dois_pontos
                               EQU              2_00111010
   37 00000000 00000029 
                       char_parenteses_dir
                               EQU              2_00101001
   38 00000000 00000041 
                       char_A  EQU              2_01000001
   39 00000000 00000058 
                       char_D  EQU              2_01011000
   40 00000000 00000049 
                       char_I  EQU              2_01001001
   41 00000000 00000050 
                       char_P  EQU              2_01010000
   42 00000000 00000052 
                       char_R  EQU              2_01010010
   43 00000000 00000056 
                       char_V  EQU              2_01010110
   44 00000000 00000061 
                       char_a  EQU              2_01100001
   45 00000000 00000062 
                       char_b  EQU              2_01100010
   46 00000000 00000063 
                       char_c  EQU              2_01100011
   47 00000000 00000064 
                       char_d  EQU              2_01100100
   48 00000000 00000065 
                       char_e  EQU              2_01100101
   49 00000000 00000067 
                       char_g  EQU              2_01100111
   50 00000000 00000069 
                       char_i  EQU              2_01101001
   51 00000000 0000006C 
                       char_l  EQU              2_01101100
   52 00000000 0000006D 
                       char_m  EQU              2_01101101
   53 00000000 0000006E 
                       char_n  EQU              2_01101110
   54 00000000 0000006F 
                       char_o  EQU              2_01101111
   55 00000000 00000072 
                       char_r  EQU              2_01110010
   56 00000000 00000073 
                       char_s  EQU              2_01110011
   57 00000000 00000074 
                       char_t  EQU              2_01110100
   58 00000000 00000075 
                       char_u  EQU              2_01110101
   59 00000000 00000078 
                       char_x  EQU              2_01111000
   60 00000000         
   61 00000000         



ARM Macro Assembler    Page 3 


   62 00000000 20020004 
                       CURR_KEY
                               EQU              0x20020004
   63 00000000 20030000 
                       ANGLE   EQU              0x20030000
   64 00000000 20030004 
                       TURN    EQU              0x20030004
   65 00000000         
   66 00000000         ; ------------------------------------------------------
                       -------------------------
   67 00000000         ; Area de Codigo
   68 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   69 00000000         
   70 00000000                 EXPORT           create_data_row
   71 00000000                 EXPORT           create_increment_row
   72 00000000                 EXPORT           create_reset_row
   73 00000000                 EXPORT           LCD_Display_Character
   74 00000000                 EXPORT           LCD_go_to_second_line
   75 00000000                 EXPORT           LCD_Reset
   76 00000000         
   77 00000000         
   78 00000000                 IMPORT           SysTick_Wait1ms
   79 00000000                 IMPORT           SysTick_Wait1us
   80 00000000         
   81 00000000                 IMPORT           LCD_Display_Number
   82 00000000         ; ------------------------------------------------------
                       -------------------------
   83 00000000         ; Funcao LCD_Display_Character
   84 00000000         ; Input: R0 -> Dado a ser mostrado no display
   85 00000000         
   86 00000000         LCD_Display_Character
   87 00000000 B500            PUSH             {LR}
   88 00000002         
   89 00000002 49DF            LDR              R1, =GPIO_PORTK_DATA_R ; Dado a
                                                             ser mostrado
   90 00000004 6008            STR              R0, [R1]
   91 00000006         
   92 00000006 49DF            LDR              R1, =GPIO_PORTM_DATA_R
   93 00000008 F04F 0005       MOV              R0, #2_101
   94 0000000C 6008            STR              R0, [R1]
   95 0000000E         
   96 0000000E F04F 0201       LDR              R2, =1
   97 00000012 F7FF FFFE       BL               SysTick_Wait1ms
   98 00000016         
   99 00000016 49DB            LDR              R1, =GPIO_PORTM_DATA_R
  100 00000018 F04F 0000       MOV              R0, #0x00
  101 0000001C 6008            STR              R0, [R1]
  102 0000001E         
  103 0000001E F04F 0201       LDR              R2, =1
  104 00000022 F7FF FFFE       BL               SysTick_Wait1ms
  105 00000026         
  106 00000026 F85D EB04       POP              {LR}
  107 0000002A 4770            BX               LR
  108 0000002C         
  109 0000002C         ; ------------------------------------------------------
                       -------------------------
  110 0000002C         ; Funcao LCD_go_to_second_line
  111 0000002C         ; Faz com que o cursor va para a segunda linha do displa



ARM Macro Assembler    Page 4 


                       y
  112 0000002C         ; Parametro de entrada: nenhum
  113 0000002C         ; Parametro de saida: nenhum
  114 0000002C         
  115 0000002C         LCD_go_to_second_line
  116 0000002C B500            PUSH             {LR}
  117 0000002E         
  118 0000002E 48D4            LDR              R0, =GPIO_PORTK_DATA_R 
                                                            ;Retorna para home
  119 00000030 F04F 0102       MOV              R1, #2_10
  120 00000034 6001            STR              R1, [R0]
  121 00000036         
  122 00000036 48D3            LDR              R0, =GPIO_PORTM_DATA_R
  123 00000038 F04F 0104       MOV              R1, #2_100
  124 0000003C 6001            STR              R1, [R0]
  125 0000003E         
  126 0000003E F04F 0202       MOV              R2, #2
  127 00000042 F7FF FFFE       BL               SysTick_Wait1ms
  128 00000046         
  129 00000046 48CF            LDR              R0, =GPIO_PORTM_DATA_R
  130 00000048 F04F 0100       MOV              R1, #0x00
  131 0000004C 6001            STR              R1, [R0]    ;Retornou para home
                                                            
  132 0000004E         
  133 0000004E F04F 0300       MOV              R3, #0
  134 00000052         cursor_shift_right                   ;Pula os 40 digitos
                                                            
  135 00000052 48CB            LDR              R0, =GPIO_PORTK_DATA_R
  136 00000054 F04F 0114       MOV              R1, #2_10100
  137 00000058 6001            STR              R1, [R0]
  138 0000005A         
  139 0000005A 48CA            LDR              R0, =GPIO_PORTM_DATA_R
  140 0000005C F04F 0104       MOV              R1, #2_100
  141 00000060 6001            STR              R1, [R0]
  142 00000062         
  143 00000062 F04F 0002       MOV              R0, #2
  144 00000066 F7FF FFFE       BL               SysTick_Wait1us
  145 0000006A         
  146 0000006A 48C6            LDR              R0, =GPIO_PORTM_DATA_R
  147 0000006C F04F 0100       MOV              R1, #0x00
  148 00000070 6001            STR              R1, [R0]
  149 00000072         
  150 00000072 F103 0301       ADD              R3, #1
  151 00000076 2B28            CMP              R3, #40
  152 00000078 D1EB            BNE              cursor_shift_right
  153 0000007A         
  154 0000007A F85D EB04       POP              {LR}
  155 0000007E 4770            BX               LR
  156 00000080         
  157 00000080         ; ------------------------------------------------------
                       -------------------------
  158 00000080         ; Funcao LCD_Reset
  159 00000080         ; Reseta os valores de DDRAM do LCD
  160 00000080         ; Parametro de entrada: nenhum
  161 00000080         ; Parametro de saida: nenhum
  162 00000080         LCD_Reset
  163 00000080 B500            PUSH             {LR}
  164 00000082         
  165 00000082 48BF            LDR              R0, =GPIO_PORTK_DATA_R ;Clear n



ARM Macro Assembler    Page 5 


                                                            o display     
  166 00000084 F04F 0101       MOV              R1, #2_1
  167 00000088 6001            STR              R1, [R0]
  168 0000008A         
  169 0000008A 48BE            LDR              R0, =GPIO_PORTM_DATA_R
  170 0000008C F04F 0104       MOV              R1, #2_100
  171 00000090 6001            STR              R1, [R0]
  172 00000092         
  173 00000092 F04F 0201       MOV              R2, #1
  174 00000096 F7FF FFFE       BL               SysTick_Wait1ms
  175 0000009A         
  176 0000009A 48BA            LDR              R0, =GPIO_PORTM_DATA_R
  177 0000009C F04F 0100       MOV              R1, #0x00
  178 000000A0 6001            STR              R1, [R0]
  179 000000A2         
  180 000000A2 F04F 0201       MOV              R2, #1
  181 000000A6 F7FF FFFE       BL               SysTick_Wait1ms
  182 000000AA         
  183 000000AA 48B5            LDR              R0, =GPIO_PORTK_DATA_R 
                                                            ;Retorna para home
  184 000000AC F04F 0102       MOV              R1, #2_10
  185 000000B0 6001            STR              R1, [R0]
  186 000000B2         
  187 000000B2 48B4            LDR              R0, =GPIO_PORTM_DATA_R
  188 000000B4 F04F 0104       MOV              R1, #2_100
  189 000000B8 6001            STR              R1, [R0]
  190 000000BA         
  191 000000BA F04F 0201       MOV              R2, #1
  192 000000BE F7FF FFFE       BL               SysTick_Wait1ms
  193 000000C2         
  194 000000C2 48B0            LDR              R0, =GPIO_PORTM_DATA_R
  195 000000C4 F04F 0100       MOV              R1, #0x00
  196 000000C8 6001            STR              R1, [R0]    ;Retornou para home
                                                            
  197 000000CA         
  198 000000CA F04F 0201       MOV              R2, #1
  199 000000CE F7FF FFFE       BL               SysTick_Wait1ms
  200 000000D2         
  201 000000D2 F85D EB04       POP              {LR}
  202 000000D6 4770            BX               LR
  203 000000D8         ; ------------------------------------------------------
                       ------------------------
  204 000000D8         ; Funcao create_data_row
  205 000000D8         ; Seta hardcode no LCD para apresentar "Angulo: ang Volt
                       a: turn"
  206 000000D8         ; Parametro de entrada: nenhum
  207 000000D8         ; Parametro de saida: nenhum
  208 000000D8         create_data_row
  209 000000D8 B500            PUSH             {LR}
  210 000000DA         
  211 000000DA F7FF FFFE       BL               LCD_Reset
  212 000000DE         
  213 000000DE F04F 0041       LDR              R0, =char_A
  214 000000E2 F7FF FFFE       BL               LCD_Display_Character
  215 000000E6 F04F 006E       LDR              R0, =char_n
  216 000000EA F7FF FFFE       BL               LCD_Display_Character
  217 000000EE F04F 0067       LDR              R0, =char_g
  218 000000F2 F7FF FFFE       BL               LCD_Display_Character
  219 000000F6 F04F 0075       LDR              R0, =char_u



ARM Macro Assembler    Page 6 


  220 000000FA F7FF FFFE       BL               LCD_Display_Character
  221 000000FE F04F 006C       LDR              R0, =char_l
  222 00000102 F7FF FFFE       BL               LCD_Display_Character
  223 00000106 F04F 006F       LDR              R0, =char_o
  224 0000010A F7FF FFFE       BL               LCD_Display_Character
  225 0000010E F04F 003A       LDR              R0, =char_dois_pontos
  226 00000112 F7FF FFFE       BL               LCD_Display_Character
  227 00000116 F04F 0020       LDR              R0, =char_space
  228 0000011A F7FF FFFE       BL               LCD_Display_Character
  229 0000011E         ;Aqui fazer receber o valor de ang, separar ele em até 
                       3 digitos e mostrar
  230 0000011E         
  231 0000011E 499A            LDR              R1, =ANGLE
  232 00000120 6808            LDR              R0, [R1]
  233 00000122 F04F 0200       MOV              R2, #0
  234 00000126 4290            CMP              R0, R2
  235 00000128 D803            BHI              positive
  236 0000012A         
  237 0000012A F04F 002D       LDR              R0, =char_minus
  238 0000012E F7FF FFFE       BL               LCD_Display_Character
  239 00000132         positive
  240 00000132         
  241 00000132 4995            LDR              R1, =ANGLE
  242 00000134 6808            LDR              R0, [R1]
  243 00000136         
  244 00000136 B081            SUB              SP, SP, #4
  245 00000138 F7FF FFFE       BL               LCD_Display_Number 
                                                            ; Chama função C
  246 0000013C B001            ADD              SP, SP, #4
  247 0000013E         
  248 0000013E F04F 00DF       LDR              R0, =char_angle
  249 00000142 F7FF FFFE       BL               LCD_Display_Character
  250 00000146         
  251 00000146 F7FF FFFE       BL               LCD_go_to_second_line
  252 0000014A         
  253 0000014A F04F 0056       LDR              R0, =char_V
  254 0000014E F7FF FFFE       BL               LCD_Display_Character
  255 00000152 F04F 006F       LDR              R0, =char_o
  256 00000156 F7FF FFFE       BL               LCD_Display_Character
  257 0000015A F04F 006C       LDR              R0, =char_l
  258 0000015E F7FF FFFE       BL               LCD_Display_Character
  259 00000162 F04F 0074       LDR              R0, =char_t
  260 00000166 F7FF FFFE       BL               LCD_Display_Character
  261 0000016A F04F 0061       LDR              R0, =char_a
  262 0000016E F7FF FFFE       BL               LCD_Display_Character
  263 00000172 F04F 003A       LDR              R0, =char_dois_pontos
  264 00000176 F7FF FFFE       BL               LCD_Display_Character
  265 0000017A F04F 0020       LDR              R0, =char_space
  266 0000017E F7FF FFFE       BL               LCD_Display_Character
  267 00000182         ;Aqui fazer receber o valor de turn, separar ele em até
                        3 digitos e mostrar, lembrar que pode ser negativo
  268 00000182         ;BL    LCD_Display_Number
  269 00000182         
  270 00000182 F85D EB04       POP              {LR}
  271 00000186 4770            BX               LR
  272 00000188         
  273 00000188         ; ------------------------------------------------------
                       ------------------------
  274 00000188         ; Funcao create_increment_row



ARM Macro Assembler    Page 7 


  275 00000188         ; Seta hardcode no LCD para apresentar "Incremento: inc"
                       
  276 00000188         ; Parametro de entrada: nenhum
  277 00000188         ; Parametro de saida: nenhum
  278 00000188         create_increment_row
  279 00000188 B500            PUSH             {LR}
  280 0000018A         
  281 0000018A F04F 0049       LDR              R0, =char_I
  282 0000018E F7FF FFFE       BL               LCD_Display_Character
  283 00000192 F04F 006E       LDR              R0, =char_n
  284 00000196 F7FF FFFE       BL               LCD_Display_Character
  285 0000019A F04F 0063       LDR              R0, =char_c
  286 0000019E F7FF FFFE       BL               LCD_Display_Character
  287 000001A2 F04F 0072       LDR              R0, =char_r
  288 000001A6 F7FF FFFE       BL               LCD_Display_Character
  289 000001AA F04F 0065       LDR              R0, =char_e
  290 000001AE F7FF FFFE       BL               LCD_Display_Character
  291 000001B2 F04F 006D       LDR              R0, =char_m
  292 000001B6 F7FF FFFE       BL               LCD_Display_Character
  293 000001BA F04F 0065       LDR              R0, =char_e
  294 000001BE F7FF FFFE       BL               LCD_Display_Character
  295 000001C2 F04F 006E       LDR              R0, =char_n
  296 000001C6 F7FF FFFE       BL               LCD_Display_Character
  297 000001CA F04F 0074       LDR              R0, =char_t
  298 000001CE F7FF FFFE       BL               LCD_Display_Character
  299 000001D2 F04F 006F       LDR              R0, =char_o
  300 000001D6 F7FF FFFE       BL               LCD_Display_Character
  301 000001DA F04F 003A       LDR              R0, =char_dois_pontos
  302 000001DE F7FF FFFE       BL               LCD_Display_Character
  303 000001E2 F04F 0020       LDR              R0, =char_space
  304 000001E6 F7FF FFFE       BL               LCD_Display_Character
  305 000001EA         ;Aqui fazer receber o valor de inc, separar ele em até 
                       3 digitos e mostrar
  306 000001EA         ;BL    LCD_Display_Increment
  307 000001EA         
  308 000001EA F85D EB04       POP              {LR}
  309 000001EE 4770            BX               LR
  310 000001F0         
  311 000001F0         ; ------------------------------------------------------
                       ------------------------
  312 000001F0         ; Funcao create_mode_row
  313 000001F0         ; Seta hardcode no LCD para apresentar "Modo de passo: m
                       ode"
  314 000001F0         ; Parametro de entrada: nenhum
  315 000001F0         ; Parametro de saida: nenhum
  316 000001F0         create_mode_row
  317 000001F0 B500            PUSH             {LR}
  318 000001F2         
  319 000001F2 F04F 0049       LDR              R0, =char_I
  320 000001F6 F7FF FFFE       BL               LCD_Display_Character
  321 000001FA F04F 006E       LDR              R0, =char_n
  322 000001FE F7FF FFFE       BL               LCD_Display_Character
  323 00000202 F04F 0063       LDR              R0, =char_c
  324 00000206 F7FF FFFE       BL               LCD_Display_Character
  325 0000020A F04F 0072       LDR              R0, =char_r
  326 0000020E F7FF FFFE       BL               LCD_Display_Character
  327 00000212 F04F 0065       LDR              R0, =char_e
  328 00000216 F7FF FFFE       BL               LCD_Display_Character
  329 0000021A F04F 006D       LDR              R0, =char_m



ARM Macro Assembler    Page 8 


  330 0000021E F7FF FFFE       BL               LCD_Display_Character
  331 00000222 F04F 0065       LDR              R0, =char_e
  332 00000226 F7FF FFFE       BL               LCD_Display_Character
  333 0000022A F04F 006E       LDR              R0, =char_n
  334 0000022E F7FF FFFE       BL               LCD_Display_Character
  335 00000232 F04F 0074       LDR              R0, =char_t
  336 00000236 F7FF FFFE       BL               LCD_Display_Character
  337 0000023A F04F 006F       LDR              R0, =char_o
  338 0000023E F7FF FFFE       BL               LCD_Display_Character
  339 00000242 F04F 003A       LDR              R0, =char_dois_pontos
  340 00000246 F7FF FFFE       BL               LCD_Display_Character
  341 0000024A F04F 0020       LDR              R0, =char_space
  342 0000024E F7FF FFFE       BL               LCD_Display_Character
  343 00000252         ;Aqui fazer receber o valor de inc, separar ele em até 
                       3 digitos e mostrar
  344 00000252         ;BL    LCD_Display_Increment
  345 00000252         
  346 00000252 F85D EB04       POP              {LR}
  347 00000256 4770            BX               LR
  348 00000258         
  349 00000258         ; ------------------------------------------------------
                       ------------------------
  350 00000258         ; Funcao create_reset_row
  351 00000258         ; Seta hardcode no LCD para apresentar "Resetando..."
  352 00000258         ; Parametro de entrada: nenhum
  353 00000258         ; Parametro de saida: nenhum
  354 00000258         create_reset_row
  355 00000258 B500            PUSH             {LR}
  356 0000025A         
  357 0000025A F7FF FFFE       BL               LCD_Reset
  358 0000025E         
  359 0000025E         ; Resetando
  360 0000025E F04F 0052       LDR              R0, =char_R
  361 00000262 F7FF FFFE       BL               LCD_Display_Character
  362 00000266 F04F 0065       LDR              R0, =char_e
  363 0000026A F7FF FFFE       BL               LCD_Display_Character
  364 0000026E F04F 0073       LDR              R0, =char_s
  365 00000272 F7FF FFFE       BL               LCD_Display_Character
  366 00000276 F04F 0065       LDR              R0, =char_e
  367 0000027A F7FF FFFE       BL               LCD_Display_Character
  368 0000027E F04F 0074       LDR              R0, =char_t
  369 00000282 F7FF FFFE       BL               LCD_Display_Character
  370 00000286 F04F 0061       LDR              R0, =char_a
  371 0000028A F7FF FFFE       BL               LCD_Display_Character
  372 0000028E F04F 006E       LDR              R0, =char_n
  373 00000292 F7FF FFFE       BL               LCD_Display_Character
  374 00000296 F04F 0064       LDR              R0, =char_d
  375 0000029A F7FF FFFE       BL               LCD_Display_Character
  376 0000029E F04F 006F       LDR              R0, =char_o
  377 000002A2 F7FF FFFE       BL               LCD_Display_Character
  378 000002A6         
  379 000002A6         ; ... piscando
  380 000002A6 F04F 0900       MOV              R9, #0      ;quantidade de iter
                                                            acoes geral
  381 000002AA         blink_loop
  382 000002AA F1B9 0F05       CMP              R9, #5      ;Enquanto nao fizer
                                                             x vezes, nao final
                                                            iza
  383 000002AE D062            BEQ              display_resetado



ARM Macro Assembler    Page 9 


  384 000002B0         
  385 000002B0         display_dots
  386 000002B0 F109 0901       ADD              R9, #1      ;Soma 1 no iterador
                                                            
  387 000002B4         
  388 000002B4 F04F 002E       LDR              R0 , =char_dot
  389 000002B8 F7FF FFFE       BL               LCD_Display_Character
  390 000002BC F04F 0296       MOV              R2, #150
  391 000002C0 F7FF FFFE       BL               SysTick_Wait1ms ;Mostra primeir
                                                            o ponto e espera um
                                                             pouco
  392 000002C4 F04F 002E       LDR              R0, =char_dot
  393 000002C8 F7FF FFFE       BL               LCD_Display_Character
  394 000002CC F04F 0296       MOV              R2, #150
  395 000002D0 F7FF FFFE       BL               SysTick_Wait1ms ;Mostra segundo
                                                             ponto e espera um 
                                                            pouco
  396 000002D4 F04F 002E       LDR              R0, =char_dot
  397 000002D8 F7FF FFFE       BL               LCD_Display_Character
  398 000002DC F04F 0296       MOV              R2, #150
  399 000002E0 F7FF FFFE       BL               SysTick_Wait1ms ;Mostra terceir
                                                            o ponto e espera um
                                                             pouco
  400 000002E4         
  401 000002E4         
  402 000002E4         LCD_Clear_Tail                       ;limpa os 3 pontos 
                                                            finais
  403 000002E4         
  404 000002E4 F04F 0800       MOV              R8, #0      ;contador de iterac
                                                            oes de espacos
  405 000002E8 F04F 0700       MOV              R7, #0      ;contador de iterac
                                                            oes de left shift
  406 000002EC         
  407 000002EC         cursor_shift_left                    ;Volta os 3 dígito
                                                            s para esquerda
  408 000002EC 4824            LDR              R0, =GPIO_PORTK_DATA_R
  409 000002EE F04F 0110       MOV              R1, #2_10000
  410 000002F2 6001            STR              R1, [R0]
  411 000002F4         
  412 000002F4 4823            LDR              R0, =GPIO_PORTM_DATA_R
  413 000002F6 F04F 0104       MOV              R1, #2_100
  414 000002FA 6001            STR              R1, [R0]
  415 000002FC         
  416 000002FC F04F 0002       MOV              R0, #2
  417 00000300 F7FF FFFE       BL               SysTick_Wait1us
  418 00000304         
  419 00000304 481F            LDR              R0, =GPIO_PORTM_DATA_R
  420 00000306 F04F 0100       MOV              R1, #0x00
  421 0000030A 6001            STR              R1, [R0]
  422 0000030C         
  423 0000030C F04F 0002       MOV              R0, #2
  424 00000310 F7FF FFFE       BL               SysTick_Wait1us
  425 00000314         
  426 00000314 F108 0801       ADD              R8, #1
  427 00000318 F1B8 0F03       CMP              R8, #3
  428 0000031C D1E6            BNE              cursor_shift_left
  429 0000031E         
  430 0000031E         
  431 0000031E         display_spaces                       ;Mostra 3 espaços 



ARM Macro Assembler    Page 10 


                                                            caso ja nao tenha m
                                                            ostrado
  432 0000031E F04F 0020       LDR              R0, =char_space
  433 00000322 F7FF FFFE       BL               LCD_Display_Character
  434 00000326 F04F 0020       LDR              R0, =char_space
  435 0000032A F7FF FFFE       BL               LCD_Display_Character
  436 0000032E F04F 0020       LDR              R0, =char_space
  437 00000332 F7FF FFFE       BL               LCD_Display_Character
  438 00000336         
  439 00000336 F04F 0296       MOV              R2, #150
  440 0000033A F7FF FFFE       BL               SysTick_Wait1ms
  441 0000033E         
  442 0000033E F04F 0800       MOV              R8, #0
  443 00000342         cursor_shift_left2
  444 00000342 480F            LDR              R0, =GPIO_PORTK_DATA_R
  445 00000344 F04F 0110       MOV              R1, #2_10000
  446 00000348 6001            STR              R1, [R0]
  447 0000034A         
  448 0000034A 480E            LDR              R0, =GPIO_PORTM_DATA_R
  449 0000034C F04F 0104       MOV              R1, #2_100
  450 00000350 6001            STR              R1, [R0]
  451 00000352         
  452 00000352 F04F 0002       MOV              R0, #2
  453 00000356 F7FF FFFE       BL               SysTick_Wait1us
  454 0000035A         
  455 0000035A 480A            LDR              R0, =GPIO_PORTM_DATA_R
  456 0000035C F04F 0100       MOV              R1, #0x00
  457 00000360 6001            STR              R1, [R0]
  458 00000362         
  459 00000362 F04F 0002       MOV              R0, #2
  460 00000366 F7FF FFFE       BL               SysTick_Wait1us
  461 0000036A         
  462 0000036A F108 0801       ADD              R8, #1
  463 0000036E F1B8 0F03       CMP              R8, #3
  464 00000372 D1E6            BNE              cursor_shift_left2
  465 00000374         
  466 00000374 E799            B                blink_loop  ;Se nao voltou depo
                                                            is do espaco, volta
                                                            . Se voltou, printa
                                                             pontos dnv ou sai 
                                                            do loop
  467 00000376         
  468 00000376         display_resetado
  469 00000376         ; Resetar os valores de ang e turn
  470 00000376         
  471 00000376         ;TO-DO
  472 00000376         
  473 00000376         ;Mostrar data novamente
  474 00000376 F7FF FFFE       BL               create_data_row
  475 0000037A         
  476 0000037A F85D EB04       POP              {LR}
  477 0000037E 4770            BX               LR
  478 00000380         
  479 00000380         
  480 00000380                 ALIGN
  481 00000380                 END
              400613FC 
              400633FC 
              20030000 



ARM Macro Assembler    Page 11 


Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\lcd.d -o.\objects\lcd.o -IC:\Users\Ricar\AppData\L
ocal\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL S
ETA 1" --predefine="__UVISION_VERSION SETA 536" --predefine="TM4C1294NCPDT SETA
 1" --list=.\listings\lcd.lst lcd.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 68 in file lcd.s
   Uses
      None
Comment: .text unused
LCD_Clear_Tail 000002E4

Symbol: LCD_Clear_Tail
   Definitions
      At line 402 in file lcd.s
   Uses
      None
Comment: LCD_Clear_Tail unused
LCD_Display_Character 00000000

Symbol: LCD_Display_Character
   Definitions
      At line 86 in file lcd.s
   Uses
      At line 73 in file lcd.s
      At line 214 in file lcd.s
      At line 216 in file lcd.s
      At line 218 in file lcd.s
      At line 220 in file lcd.s
      At line 222 in file lcd.s
      At line 224 in file lcd.s
      At line 226 in file lcd.s
      At line 228 in file lcd.s
      At line 238 in file lcd.s
      At line 249 in file lcd.s
      At line 254 in file lcd.s
      At line 256 in file lcd.s
      At line 258 in file lcd.s
      At line 260 in file lcd.s
      At line 262 in file lcd.s
      At line 264 in file lcd.s
      At line 266 in file lcd.s
      At line 282 in file lcd.s
      At line 284 in file lcd.s
      At line 286 in file lcd.s
      At line 288 in file lcd.s
      At line 290 in file lcd.s
      At line 292 in file lcd.s
      At line 294 in file lcd.s
      At line 296 in file lcd.s
      At line 298 in file lcd.s
      At line 300 in file lcd.s
      At line 302 in file lcd.s
      At line 304 in file lcd.s
      At line 320 in file lcd.s
      At line 322 in file lcd.s
      At line 324 in file lcd.s
      At line 326 in file lcd.s
      At line 328 in file lcd.s
      At line 330 in file lcd.s
      At line 332 in file lcd.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 334 in file lcd.s
      At line 336 in file lcd.s
      At line 338 in file lcd.s
      At line 340 in file lcd.s
      At line 342 in file lcd.s
      At line 361 in file lcd.s
      At line 363 in file lcd.s
      At line 365 in file lcd.s
      At line 367 in file lcd.s
      At line 369 in file lcd.s
      At line 371 in file lcd.s
      At line 373 in file lcd.s
      At line 375 in file lcd.s
      At line 377 in file lcd.s
      At line 389 in file lcd.s
      At line 393 in file lcd.s
      At line 397 in file lcd.s
      At line 433 in file lcd.s
      At line 435 in file lcd.s
      At line 437 in file lcd.s

LCD_Reset 00000080

Symbol: LCD_Reset
   Definitions
      At line 162 in file lcd.s
   Uses
      At line 75 in file lcd.s
      At line 211 in file lcd.s
      At line 357 in file lcd.s

LCD_go_to_second_line 0000002C

Symbol: LCD_go_to_second_line
   Definitions
      At line 115 in file lcd.s
   Uses
      At line 74 in file lcd.s
      At line 251 in file lcd.s

blink_loop 000002AA

Symbol: blink_loop
   Definitions
      At line 381 in file lcd.s
   Uses
      At line 466 in file lcd.s
Comment: blink_loop used once
create_data_row 000000D8

Symbol: create_data_row
   Definitions
      At line 208 in file lcd.s
   Uses
      At line 70 in file lcd.s
      At line 474 in file lcd.s

create_increment_row 00000188




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Symbol: create_increment_row
   Definitions
      At line 278 in file lcd.s
   Uses
      At line 71 in file lcd.s
Comment: create_increment_row used once
create_mode_row 000001F0

Symbol: create_mode_row
   Definitions
      At line 316 in file lcd.s
   Uses
      None
Comment: create_mode_row unused
create_reset_row 00000258

Symbol: create_reset_row
   Definitions
      At line 354 in file lcd.s
   Uses
      At line 72 in file lcd.s
Comment: create_reset_row used once
cursor_shift_left 000002EC

Symbol: cursor_shift_left
   Definitions
      At line 407 in file lcd.s
   Uses
      At line 428 in file lcd.s
Comment: cursor_shift_left used once
cursor_shift_left2 00000342

Symbol: cursor_shift_left2
   Definitions
      At line 443 in file lcd.s
   Uses
      At line 464 in file lcd.s
Comment: cursor_shift_left2 used once
cursor_shift_right 00000052

Symbol: cursor_shift_right
   Definitions
      At line 134 in file lcd.s
   Uses
      At line 152 in file lcd.s
Comment: cursor_shift_right used once
display_dots 000002B0

Symbol: display_dots
   Definitions
      At line 385 in file lcd.s
   Uses
      None
Comment: display_dots unused
display_resetado 00000376

Symbol: display_resetado
   Definitions
      At line 468 in file lcd.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 383 in file lcd.s
Comment: display_resetado used once
display_spaces 0000031E

Symbol: display_spaces
   Definitions
      At line 431 in file lcd.s
   Uses
      None
Comment: display_spaces unused
positive 00000132

Symbol: positive
   Definitions
      At line 239 in file lcd.s
   Uses
      At line 235 in file lcd.s
Comment: positive used once
17 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ANGLE 20030000

Symbol: ANGLE
   Definitions
      At line 63 in file lcd.s
   Uses
      At line 231 in file lcd.s
      At line 241 in file lcd.s

CURR_KEY 20020004

Symbol: CURR_KEY
   Definitions
      At line 62 in file lcd.s
   Uses
      None
Comment: CURR_KEY unused
GPIO_PORTK_DATA_R 400613FC

Symbol: GPIO_PORTK_DATA_R
   Definitions
      At line 14 in file lcd.s
   Uses
      At line 89 in file lcd.s
      At line 118 in file lcd.s
      At line 135 in file lcd.s
      At line 165 in file lcd.s
      At line 183 in file lcd.s
      At line 408 in file lcd.s
      At line 444 in file lcd.s

GPIO_PORTM_DATA_R 400633FC

Symbol: GPIO_PORTM_DATA_R
   Definitions
      At line 15 in file lcd.s
   Uses
      At line 92 in file lcd.s
      At line 99 in file lcd.s
      At line 122 in file lcd.s
      At line 129 in file lcd.s
      At line 139 in file lcd.s
      At line 146 in file lcd.s
      At line 169 in file lcd.s
      At line 176 in file lcd.s
      At line 187 in file lcd.s
      At line 194 in file lcd.s
      At line 412 in file lcd.s
      At line 419 in file lcd.s
      At line 448 in file lcd.s
      At line 455 in file lcd.s

TURN 20030004

Symbol: TURN
   Definitions
      At line 64 in file lcd.s
   Uses
      None



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Comment: TURN unused
char_0 00000030

Symbol: char_0
   Definitions
      At line 20 in file lcd.s
   Uses
      None
Comment: char_0 unused
char_1 00000031

Symbol: char_1
   Definitions
      At line 21 in file lcd.s
   Uses
      None
Comment: char_1 unused
char_2 00000032

Symbol: char_2
   Definitions
      At line 22 in file lcd.s
   Uses
      None
Comment: char_2 unused
char_3 00000033

Symbol: char_3
   Definitions
      At line 23 in file lcd.s
   Uses
      None
Comment: char_3 unused
char_4 00000034

Symbol: char_4
   Definitions
      At line 24 in file lcd.s
   Uses
      None
Comment: char_4 unused
char_5 00000035

Symbol: char_5
   Definitions
      At line 25 in file lcd.s
   Uses
      None
Comment: char_5 unused
char_6 00000036

Symbol: char_6
   Definitions
      At line 26 in file lcd.s
   Uses
      None
Comment: char_6 unused
char_7 00000037




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

Symbol: char_7
   Definitions
      At line 27 in file lcd.s
   Uses
      None
Comment: char_7 unused
char_8 00000038

Symbol: char_8
   Definitions
      At line 28 in file lcd.s
   Uses
      None
Comment: char_8 unused
char_9 00000039

Symbol: char_9
   Definitions
      At line 29 in file lcd.s
   Uses
      None
Comment: char_9 unused
char_A 00000041

Symbol: char_A
   Definitions
      At line 38 in file lcd.s
   Uses
      At line 213 in file lcd.s
Comment: char_A used once
char_D 00000058

Symbol: char_D
   Definitions
      At line 39 in file lcd.s
   Uses
      None
Comment: char_D unused
char_I 00000049

Symbol: char_I
   Definitions
      At line 40 in file lcd.s
   Uses
      At line 281 in file lcd.s
      At line 319 in file lcd.s

char_P 00000050

Symbol: char_P
   Definitions
      At line 41 in file lcd.s
   Uses
      None
Comment: char_P unused
char_R 00000052

Symbol: char_R
   Definitions



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

      At line 42 in file lcd.s
   Uses
      At line 360 in file lcd.s
Comment: char_R used once
char_V 00000056

Symbol: char_V
   Definitions
      At line 43 in file lcd.s
   Uses
      At line 253 in file lcd.s
Comment: char_V used once
char_a 00000061

Symbol: char_a
   Definitions
      At line 44 in file lcd.s
   Uses
      At line 261 in file lcd.s
      At line 370 in file lcd.s

char_angle 000000DF

Symbol: char_angle
   Definitions
      At line 32 in file lcd.s
   Uses
      At line 248 in file lcd.s
Comment: char_angle used once
char_b 00000062

Symbol: char_b
   Definitions
      At line 45 in file lcd.s
   Uses
      None
Comment: char_b unused
char_c 00000063

Symbol: char_c
   Definitions
      At line 46 in file lcd.s
   Uses
      At line 285 in file lcd.s
      At line 323 in file lcd.s

char_cdot 000000A5

Symbol: char_cdot
   Definitions
      At line 30 in file lcd.s
   Uses
      None
Comment: char_cdot unused
char_d 00000064

Symbol: char_d
   Definitions
      At line 47 in file lcd.s



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 374 in file lcd.s
Comment: char_d used once
char_dois_pontos 0000003A

Symbol: char_dois_pontos
   Definitions
      At line 36 in file lcd.s
   Uses
      At line 225 in file lcd.s
      At line 263 in file lcd.s
      At line 301 in file lcd.s
      At line 339 in file lcd.s

char_dot 0000002E

Symbol: char_dot
   Definitions
      At line 31 in file lcd.s
   Uses
      At line 388 in file lcd.s
      At line 392 in file lcd.s
      At line 396 in file lcd.s

char_e 00000065

Symbol: char_e
   Definitions
      At line 48 in file lcd.s
   Uses
      At line 289 in file lcd.s
      At line 293 in file lcd.s
      At line 327 in file lcd.s
      At line 331 in file lcd.s
      At line 362 in file lcd.s
      At line 366 in file lcd.s

char_g 00000067

Symbol: char_g
   Definitions
      At line 49 in file lcd.s
   Uses
      At line 217 in file lcd.s
Comment: char_g used once
char_i 00000069

Symbol: char_i
   Definitions
      At line 50 in file lcd.s
   Uses
      None
Comment: char_i unused
char_l 0000006C

Symbol: char_l
   Definitions
      At line 51 in file lcd.s
   Uses



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

      At line 221 in file lcd.s
      At line 257 in file lcd.s

char_m 0000006D

Symbol: char_m
   Definitions
      At line 52 in file lcd.s
   Uses
      At line 291 in file lcd.s
      At line 329 in file lcd.s

char_minus 0000002D

Symbol: char_minus
   Definitions
      At line 34 in file lcd.s
   Uses
      At line 237 in file lcd.s
Comment: char_minus used once
char_n 0000006E

Symbol: char_n
   Definitions
      At line 53 in file lcd.s
   Uses
      At line 215 in file lcd.s
      At line 283 in file lcd.s
      At line 295 in file lcd.s
      At line 321 in file lcd.s
      At line 333 in file lcd.s
      At line 372 in file lcd.s

char_o 0000006F

Symbol: char_o
   Definitions
      At line 54 in file lcd.s
   Uses
      At line 223 in file lcd.s
      At line 255 in file lcd.s
      At line 299 in file lcd.s
      At line 337 in file lcd.s
      At line 376 in file lcd.s

char_parenteses_dir 00000029

Symbol: char_parenteses_dir
   Definitions
      At line 37 in file lcd.s
   Uses
      None
Comment: char_parenteses_dir unused
char_plus 0000002B

Symbol: char_plus
   Definitions
      At line 33 in file lcd.s
   Uses



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

      None
Comment: char_plus unused
char_r 00000072

Symbol: char_r
   Definitions
      At line 55 in file lcd.s
   Uses
      At line 287 in file lcd.s
      At line 325 in file lcd.s

char_s 00000073

Symbol: char_s
   Definitions
      At line 56 in file lcd.s
   Uses
      At line 364 in file lcd.s
Comment: char_s used once
char_space 00000020

Symbol: char_space
   Definitions
      At line 35 in file lcd.s
   Uses
      At line 227 in file lcd.s
      At line 265 in file lcd.s
      At line 303 in file lcd.s
      At line 341 in file lcd.s
      At line 432 in file lcd.s
      At line 434 in file lcd.s
      At line 436 in file lcd.s

char_t 00000074

Symbol: char_t
   Definitions
      At line 57 in file lcd.s
   Uses
      At line 259 in file lcd.s
      At line 297 in file lcd.s
      At line 335 in file lcd.s
      At line 368 in file lcd.s

char_u 00000075

Symbol: char_u
   Definitions
      At line 58 in file lcd.s
   Uses
      At line 219 in file lcd.s
Comment: char_u used once
char_x 00000078

Symbol: char_x
   Definitions
      At line 59 in file lcd.s
   Uses
      None



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Absolute symbols

Comment: char_x unused
45 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

LCD_Display_Number 00000000

Symbol: LCD_Display_Number
   Definitions
      At line 81 in file lcd.s
   Uses
      At line 245 in file lcd.s
Comment: LCD_Display_Number used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 78 in file lcd.s
   Uses
      At line 97 in file lcd.s
      At line 104 in file lcd.s
      At line 127 in file lcd.s
      At line 174 in file lcd.s
      At line 181 in file lcd.s
      At line 192 in file lcd.s
      At line 199 in file lcd.s
      At line 391 in file lcd.s
      At line 395 in file lcd.s
      At line 399 in file lcd.s
      At line 440 in file lcd.s

SysTick_Wait1us 00000000

Symbol: SysTick_Wait1us
   Definitions
      At line 79 in file lcd.s
   Uses
      At line 144 in file lcd.s
      At line 417 in file lcd.s
      At line 424 in file lcd.s
      At line 453 in file lcd.s
      At line 460 in file lcd.s

3 symbols
401 symbols in table
