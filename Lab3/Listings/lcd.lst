


ARM Macro Assembler    Page 1 


    1 00000000         ;lcd.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Jhony Minetto Araujo, Ricardo Marthus Gremmelmaier, Ro
                       drigo Wolsky Poli
    4 00000000         ; Ver 1 02/12/2024
    5 00000000         ; Ver 2 29/01/2025
    6 00000000         
    7 00000000         
    8 00000000         ; ------------------------------------------------------
                       -------------------------
    9 00000000                 PRESERVE8        {TRUE}
   10 00000000                 THUMB                        ; Instrucoes do tip
                                                            o Thumb-2
   11 00000000         ; ------------------------------------------------------
                       -------------------------
   12 00000000         ; Declaracoes EQU - Defines
   13 00000000         ; ========================
   14 00000000 400613FC 
                       GPIO_PORTK_DATA_R
                               EQU              0x400613FC
   15 00000000 400633FC 
                       GPIO_PORTM_DATA_R
                               EQU              0x400633FC
   16 00000000         
   17 00000000         
   18 00000000         ; ================== DEFINICAO DA TABELA ===============
                       ====
   19 00000000         
   20 00000000 00000030 
                       char_0  EQU              2_00110000
   21 00000000 00000031 
                       char_1  EQU              2_00110001
   22 00000000 00000032 
                       char_2  EQU              2_00110010
   23 00000000 00000033 
                       char_3  EQU              2_00110011
   24 00000000 00000034 
                       char_4  EQU              2_00110100
   25 00000000 00000035 
                       char_5  EQU              2_00110101
   26 00000000 00000036 
                       char_6  EQU              2_00110110
   27 00000000 00000037 
                       char_7  EQU              2_00110111
   28 00000000 00000038 
                       char_8  EQU              2_00111000
   29 00000000 00000039 
                       char_9  EQU              2_00111001
   30 00000000 000000A5 
                       char_cdot
                               EQU              2_10100101
   31 00000000 0000002E 
                       char_dot
                               EQU              2_00101110
   32 00000000 000000DF 
                       char_angle
                               EQU              2_11011111
   33 00000000 0000002B 
                       char_plus



ARM Macro Assembler    Page 2 


                               EQU              2_00101011
   34 00000000 0000002D 
                       char_minus
                               EQU              2_00101101
   35 00000000 00000020 
                       char_space
                               EQU              2_00100000
   36 00000000 0000003A 
                       char_dois_pontos
                               EQU              2_00111010
   37 00000000 00000029 
                       char_parenteses_dir
                               EQU              2_00101001
   38 00000000 00000041 
                       char_A  EQU              2_01000001
   39 00000000 00000058 
                       char_D  EQU              2_01011000
   40 00000000 00000049 
                       char_I  EQU              2_01001001
   41 00000000 00000050 
                       char_P  EQU              2_01010000
   42 00000000 00000052 
                       char_R  EQU              2_01010010
   43 00000000 00000056 
                       char_V  EQU              2_01010110
   44 00000000 00000061 
                       char_a  EQU              2_01100001
   45 00000000 00000062 
                       char_b  EQU              2_01100010
   46 00000000 00000063 
                       char_c  EQU              2_01100011
   47 00000000 00000064 
                       char_d  EQU              2_01100100
   48 00000000 00000065 
                       char_e  EQU              2_01100101
   49 00000000 00000067 
                       char_g  EQU              2_01100111
   50 00000000 00000069 
                       char_i  EQU              2_01101001
   51 00000000 0000006C 
                       char_l  EQU              2_01101100
   52 00000000 0000006D 
                       char_m  EQU              2_01101101
   53 00000000 0000006E 
                       char_n  EQU              2_01101110
   54 00000000 0000006F 
                       char_o  EQU              2_01101111
   55 00000000 00000072 
                       char_r  EQU              2_01110010
   56 00000000 00000073 
                       char_s  EQU              2_01110011
   57 00000000 00000074 
                       char_t  EQU              2_01110100
   58 00000000 00000075 
                       char_u  EQU              2_01110101
   59 00000000 00000078 
                       char_x  EQU              2_01111000
   60 00000000         
   61 00000000         



ARM Macro Assembler    Page 3 


   62 00000000 20020004 
                       CURR_KEY
                               EQU              0x20020004
   63 00000000 20030000 
                       ANGLE   EQU              0x20030000
   64 00000000 20030004 
                       TURN    EQU              0x20030004
   65 00000000 2003000C 
                       APOLARITY
                               EQU              0x2003000C
   66 00000000 20030010 
                       TPOLARITY
                               EQU              0x20030010
   67 00000000         
   68 00000000         ; ------------------------------------------------------
                       -------------------------
   69 00000000         ; Area de Codigo
   70 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   71 00000000         
   72 00000000                 EXPORT           create_data_row
   73 00000000                 EXPORT           create_increment_row
   74 00000000                 EXPORT           create_reset_row
   75 00000000                 EXPORT           LCD_Display_Character
   76 00000000                 EXPORT           LCD_go_to_second_line
   77 00000000                 EXPORT           LCD_Reset
   78 00000000         
   79 00000000         
   80 00000000                 IMPORT           SysTick_Wait1ms
   81 00000000                 IMPORT           SysTick_Wait1us
   82 00000000         
   83 00000000                 IMPORT           LCD_Display_Number
   84 00000000         ; ------------------------------------------------------
                       -------------------------
   85 00000000         ; Funcao LCD_Display_Character
   86 00000000         ; Input: R0 -> Dado a ser mostrado no display
   87 00000000         
   88 00000000         LCD_Display_Character
   89 00000000 B500            PUSH             {LR}
   90 00000002         
   91 00000002 49E5            LDR              R1, =GPIO_PORTK_DATA_R ; Dado a
                                                             ser mostrado
   92 00000004 6008            STR              R0, [R1]
   93 00000006         
   94 00000006 49E5            LDR              R1, =GPIO_PORTM_DATA_R
   95 00000008 F04F 0005       MOV              R0, #2_101
   96 0000000C 6008            STR              R0, [R1]
   97 0000000E         
   98 0000000E F04F 0201       LDR              R2, =1
   99 00000012 F7FF FFFE       BL               SysTick_Wait1ms
  100 00000016         
  101 00000016 49E1            LDR              R1, =GPIO_PORTM_DATA_R
  102 00000018 F04F 0000       MOV              R0, #0x00
  103 0000001C 6008            STR              R0, [R1]
  104 0000001E         
  105 0000001E F04F 0201       LDR              R2, =1
  106 00000022 F7FF FFFE       BL               SysTick_Wait1ms
  107 00000026         
  108 00000026 F85D EB04       POP              {LR}



ARM Macro Assembler    Page 4 


  109 0000002A 4770            BX               LR
  110 0000002C         
  111 0000002C         ; ------------------------------------------------------
                       -------------------------
  112 0000002C         ; Funcao LCD_go_to_second_line
  113 0000002C         ; Faz com que o cursor va para a segunda linha do displa
                       y
  114 0000002C         ; Parametro de entrada: nenhum
  115 0000002C         ; Parametro de saida: nenhum
  116 0000002C         
  117 0000002C         LCD_go_to_second_line
  118 0000002C B500            PUSH             {LR}
  119 0000002E         
  120 0000002E 48DA            LDR              R0, =GPIO_PORTK_DATA_R 
                                                            ;Retorna para home
  121 00000030 F04F 0102       MOV              R1, #2_10
  122 00000034 6001            STR              R1, [R0]
  123 00000036         
  124 00000036 48D9            LDR              R0, =GPIO_PORTM_DATA_R
  125 00000038 F04F 0104       MOV              R1, #2_100
  126 0000003C 6001            STR              R1, [R0]
  127 0000003E         
  128 0000003E F04F 0202       MOV              R2, #2
  129 00000042 F7FF FFFE       BL               SysTick_Wait1ms
  130 00000046         
  131 00000046 48D5            LDR              R0, =GPIO_PORTM_DATA_R
  132 00000048 F04F 0100       MOV              R1, #0x00
  133 0000004C 6001            STR              R1, [R0]    ;Retornou para home
                                                            
  134 0000004E         
  135 0000004E F04F 0300       MOV              R3, #0
  136 00000052         cursor_shift_right                   ;Pula os 40 digitos
                                                            
  137 00000052 48D1            LDR              R0, =GPIO_PORTK_DATA_R
  138 00000054 F04F 0114       MOV              R1, #2_10100
  139 00000058 6001            STR              R1, [R0]
  140 0000005A         
  141 0000005A 48D0            LDR              R0, =GPIO_PORTM_DATA_R
  142 0000005C F04F 0104       MOV              R1, #2_100
  143 00000060 6001            STR              R1, [R0]
  144 00000062         
  145 00000062 F04F 0002       MOV              R0, #2
  146 00000066 F7FF FFFE       BL               SysTick_Wait1us
  147 0000006A         
  148 0000006A 48CC            LDR              R0, =GPIO_PORTM_DATA_R
  149 0000006C F04F 0100       MOV              R1, #0x00
  150 00000070 6001            STR              R1, [R0]
  151 00000072         
  152 00000072 F103 0301       ADD              R3, #1
  153 00000076 2B28            CMP              R3, #40
  154 00000078 D1EB            BNE              cursor_shift_right
  155 0000007A         
  156 0000007A F85D EB04       POP              {LR}
  157 0000007E 4770            BX               LR
  158 00000080         
  159 00000080         ; ------------------------------------------------------
                       -------------------------
  160 00000080         ; Funcao LCD_Reset
  161 00000080         ; Reseta os valores de DDRAM do LCD



ARM Macro Assembler    Page 5 


  162 00000080         ; Parametro de entrada: nenhum
  163 00000080         ; Parametro de saida: nenhum
  164 00000080         LCD_Reset
  165 00000080 B500            PUSH             {LR}
  166 00000082         
  167 00000082 48C5            LDR              R0, =GPIO_PORTK_DATA_R ;Clear n
                                                            o display     
  168 00000084 F04F 0101       MOV              R1, #2_1
  169 00000088 6001            STR              R1, [R0]
  170 0000008A         
  171 0000008A 48C4            LDR              R0, =GPIO_PORTM_DATA_R
  172 0000008C F04F 0104       MOV              R1, #2_100
  173 00000090 6001            STR              R1, [R0]
  174 00000092         
  175 00000092 F04F 0201       MOV              R2, #1
  176 00000096 F7FF FFFE       BL               SysTick_Wait1ms
  177 0000009A         
  178 0000009A 48C0            LDR              R0, =GPIO_PORTM_DATA_R
  179 0000009C F04F 0100       MOV              R1, #0x00
  180 000000A0 6001            STR              R1, [R0]
  181 000000A2         
  182 000000A2 F04F 0201       MOV              R2, #1
  183 000000A6 F7FF FFFE       BL               SysTick_Wait1ms
  184 000000AA         
  185 000000AA 48BB            LDR              R0, =GPIO_PORTK_DATA_R 
                                                            ;Retorna para home
  186 000000AC F04F 0102       MOV              R1, #2_10
  187 000000B0 6001            STR              R1, [R0]
  188 000000B2         
  189 000000B2 48BA            LDR              R0, =GPIO_PORTM_DATA_R
  190 000000B4 F04F 0104       MOV              R1, #2_100
  191 000000B8 6001            STR              R1, [R0]
  192 000000BA         
  193 000000BA F04F 0201       MOV              R2, #1
  194 000000BE F7FF FFFE       BL               SysTick_Wait1ms
  195 000000C2         
  196 000000C2 48B6            LDR              R0, =GPIO_PORTM_DATA_R
  197 000000C4 F04F 0100       MOV              R1, #0x00
  198 000000C8 6001            STR              R1, [R0]    ;Retornou para home
                                                            
  199 000000CA         
  200 000000CA F04F 0201       MOV              R2, #1
  201 000000CE F7FF FFFE       BL               SysTick_Wait1ms
  202 000000D2         
  203 000000D2 F85D EB04       POP              {LR}
  204 000000D6 4770            BX               LR
  205 000000D8         ; ------------------------------------------------------
                       ------------------------
  206 000000D8         ; Funcao create_data_row
  207 000000D8         ; Seta hardcode no LCD para apresentar "Angulo: ang Volt
                       a: turn"
  208 000000D8         ; Parametro de entrada: nenhum
  209 000000D8         ; Parametro de saida: nenhum
  210 000000D8         create_data_row
  211 000000D8 B500            PUSH             {LR}
  212 000000DA         
  213 000000DA F7FF FFFE       BL               LCD_Reset
  214 000000DE         
  215 000000DE F04F 0041       LDR              R0, =char_A



ARM Macro Assembler    Page 6 


  216 000000E2 F7FF FFFE       BL               LCD_Display_Character
  217 000000E6 F04F 006E       LDR              R0, =char_n
  218 000000EA F7FF FFFE       BL               LCD_Display_Character
  219 000000EE F04F 0067       LDR              R0, =char_g
  220 000000F2 F7FF FFFE       BL               LCD_Display_Character
  221 000000F6 F04F 0075       LDR              R0, =char_u
  222 000000FA F7FF FFFE       BL               LCD_Display_Character
  223 000000FE F04F 006C       LDR              R0, =char_l
  224 00000102 F7FF FFFE       BL               LCD_Display_Character
  225 00000106 F04F 006F       LDR              R0, =char_o
  226 0000010A F7FF FFFE       BL               LCD_Display_Character
  227 0000010E F04F 003A       LDR              R0, =char_dois_pontos
  228 00000112 F7FF FFFE       BL               LCD_Display_Character
  229 00000116 F04F 0020       LDR              R0, =char_space
  230 0000011A F7FF FFFE       BL               LCD_Display_Character
  231 0000011E         ;Aqui fazer receber o valor de ang, separar ele em até 
                       3 digitos e mostrar
  232 0000011E         
  233 0000011E 49A0            LDR              R1, =APOLARITY
  234 00000120 6808            LDR              R0, [R1]
  235 00000122 2800            CMP              R0, #0
  236 00000124 D203            BHS              positive
  237 00000126         
  238 00000126 F04F 002D       LDR              R0, =char_minus
  239 0000012A F7FF FFFE       BL               LCD_Display_Character
  240 0000012E         positive
  241 0000012E         
  242 0000012E 499D            LDR              R1, =ANGLE
  243 00000130 6808            LDR              R0, [R1]
  244 00000132 F7FF FFFE       BL               LCD_Display_Number 
                                                            ; Chama função C
  245 00000136         
  246 00000136 F04F 00DF       LDR              R0, =char_angle
  247 0000013A F7FF FFFE       BL               LCD_Display_Character
  248 0000013E         
  249 0000013E F7FF FFFE       BL               LCD_go_to_second_line
  250 00000142         
  251 00000142 F04F 0056       LDR              R0, =char_V
  252 00000146 F7FF FFFE       BL               LCD_Display_Character
  253 0000014A F04F 006F       LDR              R0, =char_o
  254 0000014E F7FF FFFE       BL               LCD_Display_Character
  255 00000152 F04F 006C       LDR              R0, =char_l
  256 00000156 F7FF FFFE       BL               LCD_Display_Character
  257 0000015A F04F 0074       LDR              R0, =char_t
  258 0000015E F7FF FFFE       BL               LCD_Display_Character
  259 00000162 F04F 0061       LDR              R0, =char_a
  260 00000166 F7FF FFFE       BL               LCD_Display_Character
  261 0000016A F04F 003A       LDR              R0, =char_dois_pontos
  262 0000016E F7FF FFFE       BL               LCD_Display_Character
  263 00000172 F04F 0020       LDR              R0, =char_space
  264 00000176 F7FF FFFE       BL               LCD_Display_Character
  265 0000017A         ;Aqui fazer receber o valor de turn, separar ele em até
                        3 digitos e mostrar, lembrar que pode ser negativo
  266 0000017A         
  267 0000017A 498B            LDR              R1, =TURN
  268 0000017C 6808            LDR              R0, [R1]
  269 0000017E F04F 0200       MOV              R2, #0
  270 00000182 4290            CMP              R0, R2
  271 00000184 D203            BHS              positive2



ARM Macro Assembler    Page 7 


  272 00000186         
  273 00000186 F04F 002D       LDR              R0, =char_minus
  274 0000018A F7FF FFFE       BL               LCD_Display_Character
  275 0000018E         positive2
  276 0000018E         
  277 0000018E 4986            LDR              R1, =TURN
  278 00000190 6808            LDR              R0, [R1]
  279 00000192 F7FF FFFE       BL               LCD_Display_Number 
                                                            ; Chama função C
  280 00000196         
  281 00000196 F85D EB04       POP              {LR}
  282 0000019A 4770            BX               LR
  283 0000019C         
  284 0000019C         ; ------------------------------------------------------
                       ------------------------
  285 0000019C         ; Funcao create_increment_row
  286 0000019C         ; Seta hardcode no LCD para apresentar "Incremento: inc"
                       
  287 0000019C         ; Parametro de entrada: nenhum
  288 0000019C         ; Parametro de saida: nenhum
  289 0000019C         create_increment_row
  290 0000019C B500            PUSH             {LR}
  291 0000019E         
  292 0000019E F7FF FFFE       BL               LCD_Reset
  293 000001A2         
  294 000001A2 F04F 0049       LDR              R0, =char_I
  295 000001A6 F7FF FFFE       BL               LCD_Display_Character
  296 000001AA F04F 006E       LDR              R0, =char_n
  297 000001AE F7FF FFFE       BL               LCD_Display_Character
  298 000001B2 F04F 0063       LDR              R0, =char_c
  299 000001B6 F7FF FFFE       BL               LCD_Display_Character
  300 000001BA F04F 0072       LDR              R0, =char_r
  301 000001BE F7FF FFFE       BL               LCD_Display_Character
  302 000001C2 F04F 0065       LDR              R0, =char_e
  303 000001C6 F7FF FFFE       BL               LCD_Display_Character
  304 000001CA F04F 006D       LDR              R0, =char_m
  305 000001CE F7FF FFFE       BL               LCD_Display_Character
  306 000001D2 F04F 0065       LDR              R0, =char_e
  307 000001D6 F7FF FFFE       BL               LCD_Display_Character
  308 000001DA F04F 006E       LDR              R0, =char_n
  309 000001DE F7FF FFFE       BL               LCD_Display_Character
  310 000001E2 F04F 0074       LDR              R0, =char_t
  311 000001E6 F7FF FFFE       BL               LCD_Display_Character
  312 000001EA F04F 006F       LDR              R0, =char_o
  313 000001EE F7FF FFFE       BL               LCD_Display_Character
  314 000001F2 F04F 003A       LDR              R0, =char_dois_pontos
  315 000001F6 F7FF FFFE       BL               LCD_Display_Character
  316 000001FA F04F 0020       LDR              R0, =char_space
  317 000001FE F7FF FFFE       BL               LCD_Display_Character
  318 00000202         
  319 00000202         
  320 00000202 F85D EB04       POP              {LR}
  321 00000206 4770            BX               LR
  322 00000208         
  323 00000208         ; ------------------------------------------------------
                       ------------------------
  324 00000208         ; Funcao create_mode_row
  325 00000208         ; Seta hardcode no LCD para apresentar "Modo de passo: m
                       ode"



ARM Macro Assembler    Page 8 


  326 00000208         ; Parametro de entrada: nenhum
  327 00000208         ; Parametro de saida: nenhum
  328 00000208         create_mode_row
  329 00000208 B500            PUSH             {LR}
  330 0000020A         
  331 0000020A F04F 0049       LDR              R0, =char_I
  332 0000020E F7FF FFFE       BL               LCD_Display_Character
  333 00000212 F04F 006E       LDR              R0, =char_n
  334 00000216 F7FF FFFE       BL               LCD_Display_Character
  335 0000021A F04F 0063       LDR              R0, =char_c
  336 0000021E F7FF FFFE       BL               LCD_Display_Character
  337 00000222 F04F 0072       LDR              R0, =char_r
  338 00000226 F7FF FFFE       BL               LCD_Display_Character
  339 0000022A F04F 0065       LDR              R0, =char_e
  340 0000022E F7FF FFFE       BL               LCD_Display_Character
  341 00000232 F04F 006D       LDR              R0, =char_m
  342 00000236 F7FF FFFE       BL               LCD_Display_Character
  343 0000023A F04F 0065       LDR              R0, =char_e
  344 0000023E F7FF FFFE       BL               LCD_Display_Character
  345 00000242 F04F 006E       LDR              R0, =char_n
  346 00000246 F7FF FFFE       BL               LCD_Display_Character
  347 0000024A F04F 0074       LDR              R0, =char_t
  348 0000024E F7FF FFFE       BL               LCD_Display_Character
  349 00000252 F04F 006F       LDR              R0, =char_o
  350 00000256 F7FF FFFE       BL               LCD_Display_Character
  351 0000025A F04F 003A       LDR              R0, =char_dois_pontos
  352 0000025E F7FF FFFE       BL               LCD_Display_Character
  353 00000262 F04F 0020       LDR              R0, =char_space
  354 00000266 F7FF FFFE       BL               LCD_Display_Character
  355 0000026A         ;Aqui fazer receber o valor de inc, separar ele em até 
                       3 digitos e mostrar
  356 0000026A         ;BL    LCD_Display_Increment
  357 0000026A         
  358 0000026A F85D EB04       POP              {LR}
  359 0000026E 4770            BX               LR
  360 00000270         
  361 00000270         ; ------------------------------------------------------
                       ------------------------
  362 00000270         ; Funcao create_reset_row
  363 00000270         ; Seta hardcode no LCD para apresentar "Resetando..."
  364 00000270         ; Parametro de entrada: nenhum
  365 00000270         ; Parametro de saida: nenhum
  366 00000270         create_reset_row
  367 00000270 B500            PUSH             {LR}
  368 00000272         
  369 00000272 F7FF FFFE       BL               LCD_Reset
  370 00000276         
  371 00000276         ; Resetando
  372 00000276 F04F 0052       LDR              R0, =char_R
  373 0000027A F7FF FFFE       BL               LCD_Display_Character
  374 0000027E F04F 0065       LDR              R0, =char_e
  375 00000282 F7FF FFFE       BL               LCD_Display_Character
  376 00000286 F04F 0073       LDR              R0, =char_s
  377 0000028A F7FF FFFE       BL               LCD_Display_Character
  378 0000028E F04F 0065       LDR              R0, =char_e
  379 00000292 F7FF FFFE       BL               LCD_Display_Character
  380 00000296 F04F 0074       LDR              R0, =char_t
  381 0000029A F7FF FFFE       BL               LCD_Display_Character
  382 0000029E F04F 0061       LDR              R0, =char_a



ARM Macro Assembler    Page 9 


  383 000002A2 F7FF FFFE       BL               LCD_Display_Character
  384 000002A6 F04F 006E       LDR              R0, =char_n
  385 000002AA F7FF FFFE       BL               LCD_Display_Character
  386 000002AE F04F 0064       LDR              R0, =char_d
  387 000002B2 F7FF FFFE       BL               LCD_Display_Character
  388 000002B6 F04F 006F       LDR              R0, =char_o
  389 000002BA F7FF FFFE       BL               LCD_Display_Character
  390 000002BE         
  391 000002BE         ; ... piscando
  392 000002BE F04F 0900       MOV              R9, #0      ;quantidade de iter
                                                            acoes geral
  393 000002C2         blink_loop
  394 000002C2 F1B9 0F05       CMP              R9, #5      ;Enquanto nao fizer
                                                             x vezes, nao final
                                                            iza
  395 000002C6 D062            BEQ              display_resetado
  396 000002C8         
  397 000002C8         display_dots
  398 000002C8 F109 0901       ADD              R9, #1      ;Soma 1 no iterador
                                                            
  399 000002CC         
  400 000002CC F04F 002E       LDR              R0 , =char_dot
  401 000002D0 F7FF FFFE       BL               LCD_Display_Character
  402 000002D4 F04F 0296       MOV              R2, #150
  403 000002D8 F7FF FFFE       BL               SysTick_Wait1ms ;Mostra primeir
                                                            o ponto e espera um
                                                             pouco
  404 000002DC F04F 002E       LDR              R0, =char_dot
  405 000002E0 F7FF FFFE       BL               LCD_Display_Character
  406 000002E4 F04F 0296       MOV              R2, #150
  407 000002E8 F7FF FFFE       BL               SysTick_Wait1ms ;Mostra segundo
                                                             ponto e espera um 
                                                            pouco
  408 000002EC F04F 002E       LDR              R0, =char_dot
  409 000002F0 F7FF FFFE       BL               LCD_Display_Character
  410 000002F4 F04F 0296       MOV              R2, #150
  411 000002F8 F7FF FFFE       BL               SysTick_Wait1ms ;Mostra terceir
                                                            o ponto e espera um
                                                             pouco
  412 000002FC         
  413 000002FC         
  414 000002FC         LCD_Clear_Tail                       ;limpa os 3 pontos 
                                                            finais
  415 000002FC         
  416 000002FC F04F 0800       MOV              R8, #0      ;contador de iterac
                                                            oes de espacos
  417 00000300 F04F 0700       MOV              R7, #0      ;contador de iterac
                                                            oes de left shift
  418 00000304         
  419 00000304         cursor_shift_left                    ;Volta os 3 dígito
                                                            s para esquerda
  420 00000304 4824            LDR              R0, =GPIO_PORTK_DATA_R
  421 00000306 F04F 0110       MOV              R1, #2_10000
  422 0000030A 6001            STR              R1, [R0]
  423 0000030C         
  424 0000030C 4823            LDR              R0, =GPIO_PORTM_DATA_R
  425 0000030E F04F 0104       MOV              R1, #2_100
  426 00000312 6001            STR              R1, [R0]
  427 00000314         



ARM Macro Assembler    Page 10 


  428 00000314 F04F 0002       MOV              R0, #2
  429 00000318 F7FF FFFE       BL               SysTick_Wait1us
  430 0000031C         
  431 0000031C 481F            LDR              R0, =GPIO_PORTM_DATA_R
  432 0000031E F04F 0100       MOV              R1, #0x00
  433 00000322 6001            STR              R1, [R0]
  434 00000324         
  435 00000324 F04F 0002       MOV              R0, #2
  436 00000328 F7FF FFFE       BL               SysTick_Wait1us
  437 0000032C         
  438 0000032C F108 0801       ADD              R8, #1
  439 00000330 F1B8 0F03       CMP              R8, #3
  440 00000334 D1E6            BNE              cursor_shift_left
  441 00000336         
  442 00000336         
  443 00000336         display_spaces                       ;Mostra 3 espaços 
                                                            caso ja nao tenha m
                                                            ostrado
  444 00000336 F04F 0020       LDR              R0, =char_space
  445 0000033A F7FF FFFE       BL               LCD_Display_Character
  446 0000033E F04F 0020       LDR              R0, =char_space
  447 00000342 F7FF FFFE       BL               LCD_Display_Character
  448 00000346 F04F 0020       LDR              R0, =char_space
  449 0000034A F7FF FFFE       BL               LCD_Display_Character
  450 0000034E         
  451 0000034E F04F 0296       MOV              R2, #150
  452 00000352 F7FF FFFE       BL               SysTick_Wait1ms
  453 00000356         
  454 00000356 F04F 0800       MOV              R8, #0
  455 0000035A         cursor_shift_left2
  456 0000035A 480F            LDR              R0, =GPIO_PORTK_DATA_R
  457 0000035C F04F 0110       MOV              R1, #2_10000
  458 00000360 6001            STR              R1, [R0]
  459 00000362         
  460 00000362 480E            LDR              R0, =GPIO_PORTM_DATA_R
  461 00000364 F04F 0104       MOV              R1, #2_100
  462 00000368 6001            STR              R1, [R0]
  463 0000036A         
  464 0000036A F04F 0002       MOV              R0, #2
  465 0000036E F7FF FFFE       BL               SysTick_Wait1us
  466 00000372         
  467 00000372 480A            LDR              R0, =GPIO_PORTM_DATA_R
  468 00000374 F04F 0100       MOV              R1, #0x00
  469 00000378 6001            STR              R1, [R0]
  470 0000037A         
  471 0000037A F04F 0002       MOV              R0, #2
  472 0000037E F7FF FFFE       BL               SysTick_Wait1us
  473 00000382         
  474 00000382 F108 0801       ADD              R8, #1
  475 00000386 F1B8 0F03       CMP              R8, #3
  476 0000038A D1E6            BNE              cursor_shift_left2
  477 0000038C         
  478 0000038C E799            B                blink_loop  ;Se nao voltou depo
                                                            is do espaco, volta
                                                            . Se voltou, printa
                                                             pontos dnv ou sai 
                                                            do loop
  479 0000038E         
  480 0000038E         display_resetado



ARM Macro Assembler    Page 11 


  481 0000038E         
  482 0000038E F7FF FFFE       BL               create_data_row
  483 00000392         
  484 00000392 F85D EB04       POP              {LR}
  485 00000396 4770            BX               LR
  486 00000398         
  487 00000398         
  488 00000398                 ALIGN
  489 00000398                 END
              400613FC 
              400633FC 
              2003000C 
              20030000 
              20030004 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\lcd.d -o.\objects\lcd.o -IC:\Users\Ricar\AppData\L
ocal\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL S
ETA 1" --predefine="__UVISION_VERSION SETA 536" --predefine="TM4C1294NCPDT SETA
 1" --list=.\listings\lcd.lst lcd.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 70 in file lcd.s
   Uses
      None
Comment: .text unused
LCD_Clear_Tail 000002FC

Symbol: LCD_Clear_Tail
   Definitions
      At line 414 in file lcd.s
   Uses
      None
Comment: LCD_Clear_Tail unused
LCD_Display_Character 00000000

Symbol: LCD_Display_Character
   Definitions
      At line 88 in file lcd.s
   Uses
      At line 75 in file lcd.s
      At line 216 in file lcd.s
      At line 218 in file lcd.s
      At line 220 in file lcd.s
      At line 222 in file lcd.s
      At line 224 in file lcd.s
      At line 226 in file lcd.s
      At line 228 in file lcd.s
      At line 230 in file lcd.s
      At line 239 in file lcd.s
      At line 247 in file lcd.s
      At line 252 in file lcd.s
      At line 254 in file lcd.s
      At line 256 in file lcd.s
      At line 258 in file lcd.s
      At line 260 in file lcd.s
      At line 262 in file lcd.s
      At line 264 in file lcd.s
      At line 274 in file lcd.s
      At line 295 in file lcd.s
      At line 297 in file lcd.s
      At line 299 in file lcd.s
      At line 301 in file lcd.s
      At line 303 in file lcd.s
      At line 305 in file lcd.s
      At line 307 in file lcd.s
      At line 309 in file lcd.s
      At line 311 in file lcd.s
      At line 313 in file lcd.s
      At line 315 in file lcd.s
      At line 317 in file lcd.s
      At line 332 in file lcd.s
      At line 334 in file lcd.s
      At line 336 in file lcd.s
      At line 338 in file lcd.s
      At line 340 in file lcd.s
      At line 342 in file lcd.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 344 in file lcd.s
      At line 346 in file lcd.s
      At line 348 in file lcd.s
      At line 350 in file lcd.s
      At line 352 in file lcd.s
      At line 354 in file lcd.s
      At line 373 in file lcd.s
      At line 375 in file lcd.s
      At line 377 in file lcd.s
      At line 379 in file lcd.s
      At line 381 in file lcd.s
      At line 383 in file lcd.s
      At line 385 in file lcd.s
      At line 387 in file lcd.s
      At line 389 in file lcd.s
      At line 401 in file lcd.s
      At line 405 in file lcd.s
      At line 409 in file lcd.s
      At line 445 in file lcd.s
      At line 447 in file lcd.s
      At line 449 in file lcd.s

LCD_Reset 00000080

Symbol: LCD_Reset
   Definitions
      At line 164 in file lcd.s
   Uses
      At line 77 in file lcd.s
      At line 213 in file lcd.s
      At line 292 in file lcd.s
      At line 369 in file lcd.s

LCD_go_to_second_line 0000002C

Symbol: LCD_go_to_second_line
   Definitions
      At line 117 in file lcd.s
   Uses
      At line 76 in file lcd.s
      At line 249 in file lcd.s

blink_loop 000002C2

Symbol: blink_loop
   Definitions
      At line 393 in file lcd.s
   Uses
      At line 478 in file lcd.s
Comment: blink_loop used once
create_data_row 000000D8

Symbol: create_data_row
   Definitions
      At line 210 in file lcd.s
   Uses
      At line 72 in file lcd.s
      At line 482 in file lcd.s




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

create_increment_row 0000019C

Symbol: create_increment_row
   Definitions
      At line 289 in file lcd.s
   Uses
      At line 73 in file lcd.s
Comment: create_increment_row used once
create_mode_row 00000208

Symbol: create_mode_row
   Definitions
      At line 328 in file lcd.s
   Uses
      None
Comment: create_mode_row unused
create_reset_row 00000270

Symbol: create_reset_row
   Definitions
      At line 366 in file lcd.s
   Uses
      At line 74 in file lcd.s
Comment: create_reset_row used once
cursor_shift_left 00000304

Symbol: cursor_shift_left
   Definitions
      At line 419 in file lcd.s
   Uses
      At line 440 in file lcd.s
Comment: cursor_shift_left used once
cursor_shift_left2 0000035A

Symbol: cursor_shift_left2
   Definitions
      At line 455 in file lcd.s
   Uses
      At line 476 in file lcd.s
Comment: cursor_shift_left2 used once
cursor_shift_right 00000052

Symbol: cursor_shift_right
   Definitions
      At line 136 in file lcd.s
   Uses
      At line 154 in file lcd.s
Comment: cursor_shift_right used once
display_dots 000002C8

Symbol: display_dots
   Definitions
      At line 397 in file lcd.s
   Uses
      None
Comment: display_dots unused
display_resetado 0000038E

Symbol: display_resetado



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 480 in file lcd.s
   Uses
      At line 395 in file lcd.s
Comment: display_resetado used once
display_spaces 00000336

Symbol: display_spaces
   Definitions
      At line 443 in file lcd.s
   Uses
      None
Comment: display_spaces unused
positive 0000012E

Symbol: positive
   Definitions
      At line 240 in file lcd.s
   Uses
      At line 236 in file lcd.s
Comment: positive used once
positive2 0000018E

Symbol: positive2
   Definitions
      At line 275 in file lcd.s
   Uses
      At line 271 in file lcd.s
Comment: positive2 used once
18 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ANGLE 20030000

Symbol: ANGLE
   Definitions
      At line 63 in file lcd.s
   Uses
      At line 242 in file lcd.s
Comment: ANGLE used once
APOLARITY 2003000C

Symbol: APOLARITY
   Definitions
      At line 65 in file lcd.s
   Uses
      At line 233 in file lcd.s
Comment: APOLARITY used once
CURR_KEY 20020004

Symbol: CURR_KEY
   Definitions
      At line 62 in file lcd.s
   Uses
      None
Comment: CURR_KEY unused
GPIO_PORTK_DATA_R 400613FC

Symbol: GPIO_PORTK_DATA_R
   Definitions
      At line 14 in file lcd.s
   Uses
      At line 91 in file lcd.s
      At line 120 in file lcd.s
      At line 137 in file lcd.s
      At line 167 in file lcd.s
      At line 185 in file lcd.s
      At line 420 in file lcd.s
      At line 456 in file lcd.s

GPIO_PORTM_DATA_R 400633FC

Symbol: GPIO_PORTM_DATA_R
   Definitions
      At line 15 in file lcd.s
   Uses
      At line 94 in file lcd.s
      At line 101 in file lcd.s
      At line 124 in file lcd.s
      At line 131 in file lcd.s
      At line 141 in file lcd.s
      At line 148 in file lcd.s
      At line 171 in file lcd.s
      At line 178 in file lcd.s
      At line 189 in file lcd.s
      At line 196 in file lcd.s
      At line 424 in file lcd.s
      At line 431 in file lcd.s
      At line 460 in file lcd.s
      At line 467 in file lcd.s




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

TPOLARITY 20030010

Symbol: TPOLARITY
   Definitions
      At line 66 in file lcd.s
   Uses
      None
Comment: TPOLARITY unused
TURN 20030004

Symbol: TURN
   Definitions
      At line 64 in file lcd.s
   Uses
      At line 267 in file lcd.s
      At line 277 in file lcd.s

char_0 00000030

Symbol: char_0
   Definitions
      At line 20 in file lcd.s
   Uses
      None
Comment: char_0 unused
char_1 00000031

Symbol: char_1
   Definitions
      At line 21 in file lcd.s
   Uses
      None
Comment: char_1 unused
char_2 00000032

Symbol: char_2
   Definitions
      At line 22 in file lcd.s
   Uses
      None
Comment: char_2 unused
char_3 00000033

Symbol: char_3
   Definitions
      At line 23 in file lcd.s
   Uses
      None
Comment: char_3 unused
char_4 00000034

Symbol: char_4
   Definitions
      At line 24 in file lcd.s
   Uses
      None
Comment: char_4 unused
char_5 00000035




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

Symbol: char_5
   Definitions
      At line 25 in file lcd.s
   Uses
      None
Comment: char_5 unused
char_6 00000036

Symbol: char_6
   Definitions
      At line 26 in file lcd.s
   Uses
      None
Comment: char_6 unused
char_7 00000037

Symbol: char_7
   Definitions
      At line 27 in file lcd.s
   Uses
      None
Comment: char_7 unused
char_8 00000038

Symbol: char_8
   Definitions
      At line 28 in file lcd.s
   Uses
      None
Comment: char_8 unused
char_9 00000039

Symbol: char_9
   Definitions
      At line 29 in file lcd.s
   Uses
      None
Comment: char_9 unused
char_A 00000041

Symbol: char_A
   Definitions
      At line 38 in file lcd.s
   Uses
      At line 215 in file lcd.s
Comment: char_A used once
char_D 00000058

Symbol: char_D
   Definitions
      At line 39 in file lcd.s
   Uses
      None
Comment: char_D unused
char_I 00000049

Symbol: char_I
   Definitions
      At line 40 in file lcd.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 294 in file lcd.s
      At line 331 in file lcd.s

char_P 00000050

Symbol: char_P
   Definitions
      At line 41 in file lcd.s
   Uses
      None
Comment: char_P unused
char_R 00000052

Symbol: char_R
   Definitions
      At line 42 in file lcd.s
   Uses
      At line 372 in file lcd.s
Comment: char_R used once
char_V 00000056

Symbol: char_V
   Definitions
      At line 43 in file lcd.s
   Uses
      At line 251 in file lcd.s
Comment: char_V used once
char_a 00000061

Symbol: char_a
   Definitions
      At line 44 in file lcd.s
   Uses
      At line 259 in file lcd.s
      At line 382 in file lcd.s

char_angle 000000DF

Symbol: char_angle
   Definitions
      At line 32 in file lcd.s
   Uses
      At line 246 in file lcd.s
Comment: char_angle used once
char_b 00000062

Symbol: char_b
   Definitions
      At line 45 in file lcd.s
   Uses
      None
Comment: char_b unused
char_c 00000063

Symbol: char_c
   Definitions
      At line 46 in file lcd.s
   Uses



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

      At line 298 in file lcd.s
      At line 335 in file lcd.s

char_cdot 000000A5

Symbol: char_cdot
   Definitions
      At line 30 in file lcd.s
   Uses
      None
Comment: char_cdot unused
char_d 00000064

Symbol: char_d
   Definitions
      At line 47 in file lcd.s
   Uses
      At line 386 in file lcd.s
Comment: char_d used once
char_dois_pontos 0000003A

Symbol: char_dois_pontos
   Definitions
      At line 36 in file lcd.s
   Uses
      At line 227 in file lcd.s
      At line 261 in file lcd.s
      At line 314 in file lcd.s
      At line 351 in file lcd.s

char_dot 0000002E

Symbol: char_dot
   Definitions
      At line 31 in file lcd.s
   Uses
      At line 400 in file lcd.s
      At line 404 in file lcd.s
      At line 408 in file lcd.s

char_e 00000065

Symbol: char_e
   Definitions
      At line 48 in file lcd.s
   Uses
      At line 302 in file lcd.s
      At line 306 in file lcd.s
      At line 339 in file lcd.s
      At line 343 in file lcd.s
      At line 374 in file lcd.s
      At line 378 in file lcd.s

char_g 00000067

Symbol: char_g
   Definitions
      At line 49 in file lcd.s
   Uses



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

      At line 219 in file lcd.s
Comment: char_g used once
char_i 00000069

Symbol: char_i
   Definitions
      At line 50 in file lcd.s
   Uses
      None
Comment: char_i unused
char_l 0000006C

Symbol: char_l
   Definitions
      At line 51 in file lcd.s
   Uses
      At line 223 in file lcd.s
      At line 255 in file lcd.s

char_m 0000006D

Symbol: char_m
   Definitions
      At line 52 in file lcd.s
   Uses
      At line 304 in file lcd.s
      At line 341 in file lcd.s

char_minus 0000002D

Symbol: char_minus
   Definitions
      At line 34 in file lcd.s
   Uses
      At line 238 in file lcd.s
      At line 273 in file lcd.s

char_n 0000006E

Symbol: char_n
   Definitions
      At line 53 in file lcd.s
   Uses
      At line 217 in file lcd.s
      At line 296 in file lcd.s
      At line 308 in file lcd.s
      At line 333 in file lcd.s
      At line 345 in file lcd.s
      At line 384 in file lcd.s

char_o 0000006F

Symbol: char_o
   Definitions
      At line 54 in file lcd.s
   Uses
      At line 225 in file lcd.s
      At line 253 in file lcd.s
      At line 312 in file lcd.s



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

      At line 349 in file lcd.s
      At line 388 in file lcd.s

char_parenteses_dir 00000029

Symbol: char_parenteses_dir
   Definitions
      At line 37 in file lcd.s
   Uses
      None
Comment: char_parenteses_dir unused
char_plus 0000002B

Symbol: char_plus
   Definitions
      At line 33 in file lcd.s
   Uses
      None
Comment: char_plus unused
char_r 00000072

Symbol: char_r
   Definitions
      At line 55 in file lcd.s
   Uses
      At line 300 in file lcd.s
      At line 337 in file lcd.s

char_s 00000073

Symbol: char_s
   Definitions
      At line 56 in file lcd.s
   Uses
      At line 376 in file lcd.s
Comment: char_s used once
char_space 00000020

Symbol: char_space
   Definitions
      At line 35 in file lcd.s
   Uses
      At line 229 in file lcd.s
      At line 263 in file lcd.s
      At line 316 in file lcd.s
      At line 353 in file lcd.s
      At line 444 in file lcd.s
      At line 446 in file lcd.s
      At line 448 in file lcd.s

char_t 00000074

Symbol: char_t
   Definitions
      At line 57 in file lcd.s
   Uses
      At line 257 in file lcd.s
      At line 310 in file lcd.s
      At line 347 in file lcd.s



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Absolute symbols

      At line 380 in file lcd.s

char_u 00000075

Symbol: char_u
   Definitions
      At line 58 in file lcd.s
   Uses
      At line 221 in file lcd.s
Comment: char_u used once
char_x 00000078

Symbol: char_x
   Definitions
      At line 59 in file lcd.s
   Uses
      None
Comment: char_x unused
47 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

LCD_Display_Number 00000000

Symbol: LCD_Display_Number
   Definitions
      At line 83 in file lcd.s
   Uses
      At line 244 in file lcd.s
      At line 279 in file lcd.s

SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 80 in file lcd.s
   Uses
      At line 99 in file lcd.s
      At line 106 in file lcd.s
      At line 129 in file lcd.s
      At line 176 in file lcd.s
      At line 183 in file lcd.s
      At line 194 in file lcd.s
      At line 201 in file lcd.s
      At line 403 in file lcd.s
      At line 407 in file lcd.s
      At line 411 in file lcd.s
      At line 452 in file lcd.s

SysTick_Wait1us 00000000

Symbol: SysTick_Wait1us
   Definitions
      At line 81 in file lcd.s
   Uses
      At line 146 in file lcd.s
      At line 429 in file lcd.s
      At line 436 in file lcd.s
      At line 465 in file lcd.s
      At line 472 in file lcd.s

3 symbols
404 symbols in table
