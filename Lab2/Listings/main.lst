


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Este programa espera o usuario apertar a chave USR_SW1
                        e/ou a chave USR_SW2.
    4 00000000         ; Caso o usuario pressione a chave USR_SW1, acendera o L
                       ED3 (PF4). Caso o usuario pressione 
    5 00000000         ; a chave USR_SW2, acendera o LED4 (PF0). Caso as duas c
                       haves sejam pressionadas, os dois 
    6 00000000         ; LEDs acendem.
    7 00000000         
    8 00000000         ; ------------------------------------------------------
                       -------------------------
    9 00000000                 THUMB                        ; Instrucoes do tip
                                                            o Thumb-2
   10 00000000         ; ------------------------------------------------------
                       -------------------------
   11 00000000         ; Declaracoes EQU - Defines
   12 00000000         ;<NOME>         EQU <VALOR>
   13 00000000         ; ========================
   14 00000000         ; ~~~~~~~~~~~~~ OTHER CONSTANTS ~~~~~~~~~~~~~~
   15 00000000 20010000 
                       Timer0A_Addr
                               EQU              0x20010000
   16 00000000 20010004 
                       Timer1A_Addr
                               EQU              0x20010004
   17 00000000 20020000 
                       PREV_KEYPRESS
                               EQU              0x20020000
   18 00000000 20020004 
                       CURR_KEY
                               EQU              0x20020004
   19 00000000 20010008 
                       BLINKING_COUNTER
                               EQU              0x20010008
   20 00000000         
   21 00000000         ; ------------------------------------------------------
                       -------------------------
   22 00000000         ; Area de Dados - Declaracoes de variaveis
   23 00000000                 AREA             DATA, ALIGN=2
   24 00000000         ; Se alguma variavel for chamada em outro arquivo
   25 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riavel <var> a 
   26 00000000         ; partir de outro arquivo
   27 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variavel de nome <var>
   28 00000000         ; de <tam> bytes a partir da primeira 
   29 00000000         ; posicao da RAM  
   30 00000000         
   31 00000000         ; ------------------------------------------------------
                       -------------------------
   32 00000000         ; Area de Codigo - Tudo abaixo da diretiva a seguir sera
                        armazenado na memoria de 
   33 00000000         ;                  codigo
   34 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   35 00000000         
   36 00000000         ; Se alguma funcao do arquivo for chamada em outro arqui
                       vo 



ARM Macro Assembler    Page 2 


   37 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            funcao Start a part
                                                            ir de 
   38 00000000         ; outro arquivo. No caso startup.s
   39 00000000         
   40 00000000         ; Se chamar alguma funcao externa 
   41 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   42 00000000         ; funcao <func>
   43 00000000                 IMPORT           PLL_Init
   44 00000000                 IMPORT           SysTick_Init
   45 00000000                 IMPORT           SysTick_Wait1us
   46 00000000                 IMPORT           SysTick_Wait1ms
   47 00000000                 IMPORT           GPIO_Init
   48 00000000                 IMPORT           LCD_Init
   49 00000000                 IMPORT           Timers_Init
   50 00000000                 IMPORT           Interrupt_Init
   51 00000000         
   52 00000000                 IMPORT           TecladoM_Poll
   53 00000000                 IMPORT           create_table
   54 00000000                 IMPORT           multi_table
   55 00000000                 IMPORT           Timer0A_Handler
   56 00000000                 IMPORT           LCD_Display_Character
   57 00000000                 IMPORT           blink_leds
   58 00000000                 IMPORT           create_first_row
   59 00000000                 IMPORT           create_second_row
   60 00000000                 IMPORT           LCD_go_to_second_line
   61 00000000         
   62 00000000         ; ------------------------------------------------------
                       -------------------------
   63 00000000         ; Funcao main()
   64 00000000         Start
   65 00000000 F7FF FFFE       BL               PLL_Init    ;Subrotina para alt
                                                            erar o clock do mic
                                                            rocontrolador para 
                                                            80MHz
   66 00000004 F7FF FFFE       BL               SysTick_Init ;
   67 00000008 F7FF FFFE       BL               GPIO_Init   ;Subrotina que inic
                                                            ializa os GPIO
   68 0000000C F7FF FFFE       BL               LCD_Init    ;Subrotina que inic
                                                            ializa o LCD
   69 00000010 F7FF FFFE       BL               Timers_Init ;Subrotina que inic
                                                            ializa o Timer0A
   70 00000014 F7FF FFFE       BL               Interrupt_Init ;Subrotina que i
                                                            nicializa os Interr
                                                            upts de GPIO
   71 00000018 F7FF FFFE       BL               create_table ;Subrotina que cri
                                                            a a tabela de multi
                                                            plicacao
   72 0000001C         
   73 0000001C 481E            LDR              R0, =PREV_KEYPRESS
   74 0000001E F04F 0110       MOV              R1, #0x10
   75 00000022 6001            STR              R1, [R0]
   76 00000024         
   77 00000024 481D            LDR              R0, =CURR_KEY
   78 00000026 F04F 0100       MOV              R1, #0
   79 0000002A 6001            STR              R1, [R0]
   80 0000002C         
   81 0000002C 481C            LDR              R0, =BLINKING_COUNTER



ARM Macro Assembler    Page 3 


   82 0000002E F04F 0100       MOV              R1, #0
   83 00000032 6001            STR              R1, [R0]
   84 00000034         ; ------------------------------------------------------
                       -------------------------
   85 00000034         ; Laco principal
   86 00000034         ; R1 = valor da tecla pressionada
   87 00000034         
   88 00000034         
   89 00000034         MainLoop
   90 00000034 481B            LDR              R0, =Timer0A_Addr
   91 00000036 6801            LDR              R1, [R0]
   92 00000038 2901            CMP              R1, #1
   93 0000003A D004            BEQ              update_data_timer0
   94 0000003C         
   95 0000003C 481A            LDR              R0, =Timer1A_Addr
   96 0000003E 6801            LDR              R1, [R0]
   97 00000040 2901            CMP              R1, #1
   98 00000042 D020            BEQ              update_data_timer1
   99 00000044         
  100 00000044         
  101 00000044 E7F6            B                MainLoop    ;Volta para o laco 
                                                            principal
  102 00000046         
  103 00000046         
  104 00000046         update_data_timer0
  105 00000046 4817            LDR              R0, =Timer0A_Addr
  106 00000048 F04F 0100       MOV              R1, #0
  107 0000004C 6001            STR              R1, [R0]
  108 0000004E         
  109 0000004E F7FF FFFE       BL               TecladoM_Poll
  110 00000052         
  111 00000052 4811            LDR              R0, =PREV_KEYPRESS ; Recupera o
                                                             último click e ar
                                                            mazena o atual
  112 00000054 6802            LDR              R2, [R0]
  113 00000056 6001            STR              R1, [R0]
  114 00000058         
  115 00000058 2A10            CMP              R2, #0x10   ; Pula se a última
                                                             tecla for 0x10
  116 0000005A D01B            BEQ              skip
  117 0000005C         
  118 0000005C 2910            CMP              R1, #0x10   ; Detecta falling-e
                                                            dge da tecla
  119 0000005E D119            BNE              skip
  120 00000060         
  121 00000060 F002 010F       AND              R1, R2, #0x0F ; Filtra os 4 LSB
                                                             de R1
  122 00000064 2901            CMP              R1, #0x1    ; Verifica se a tec
                                                            la pressionada esta
                                                             entre 1 e 9
  123 00000066 D315            BLO              skip
  124 00000068         
  125 00000068 2909            CMP              R1, #0x9
  126 0000006A D813            BHI              skip
  127 0000006C         
  128 0000006C 480B            LDR              R0, =CURR_KEY ; Atualiza a tecl
                                                            a atual
  129 0000006E 6001            STR              R1, [R0]
  130 00000070         



ARM Macro Assembler    Page 4 


  131 00000070 480A            LDR              R0, =CURR_KEY
  132 00000072 6801            LDR              R1, [R0]
  133 00000074 F7FF FFFE       BL               create_first_row
  134 00000078         
  135 00000078 F7FF FFFE       BL               LCD_go_to_second_line
  136 0000007C         
  137 0000007C         ; R2 = fator da multiplicacao
  138 0000007C F7FF FFFE       BL               multi_table
  139 00000080 F7FF FFFE       BL               create_second_row
  140 00000084         
  141 00000084 E006            B                skip
  142 00000086         
  143 00000086         update_data_timer1
  144 00000086 4808            LDR              R0, =Timer1A_Addr ; Zera o bit 
                                                            do endereço do int
                                                            errupt do timer 1
  145 00000088 F04F 0100       MOV              R1, #0
  146 0000008C 6001            STR              R1, [R0]
  147 0000008E         
  148 0000008E F7FF FFFE       BL               blink_leds
  149 00000092 E7FF            B                skip
  150 00000094         
  151 00000094         skip
  152 00000094 E7CE            B                MainLoop
  153 00000096         
  154 00000096 00 00           ALIGN                        ;Garante que o fim 
                                                            da secao esta alinh
                                                            ada 
  155 00000098                 END                          ;Fim do arquivo
              20020000 
              20020004 
              20010008 
              20010000 
              20010004 
Command Line: --debug --xref --diag_suppress=9931,A1950W --cpu=Cortex-M4.fp.sp 
--depend=.\objects\main.d -o.\objects\main.o -IC:\Users\jhony\AppData\Local\Arm
\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL SETA 1" -
-predefine="__UVISION_VERSION SETA 541" --predefine="TM4C1294NCPDT SETA 1" --li
st=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 23 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 34 in file main.s
   Uses
      None
Comment: .text unused
MainLoop 00000034

Symbol: MainLoop
   Definitions
      At line 89 in file main.s
   Uses
      At line 101 in file main.s
      At line 152 in file main.s

Start 00000000

Symbol: Start
   Definitions
      At line 64 in file main.s
   Uses
      At line 37 in file main.s
Comment: Start used once
skip 00000094

Symbol: skip
   Definitions
      At line 151 in file main.s
   Uses
      At line 116 in file main.s
      At line 119 in file main.s
      At line 123 in file main.s
      At line 126 in file main.s
      At line 141 in file main.s
      At line 149 in file main.s

update_data_timer0 00000046

Symbol: update_data_timer0
   Definitions
      At line 104 in file main.s
   Uses
      At line 93 in file main.s
Comment: update_data_timer0 used once
update_data_timer1 00000086

Symbol: update_data_timer1
   Definitions
      At line 143 in file main.s
   Uses
      At line 98 in file main.s
Comment: update_data_timer1 used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BLINKING_COUNTER 20010008

Symbol: BLINKING_COUNTER
   Definitions
      At line 19 in file main.s
   Uses
      At line 81 in file main.s
Comment: BLINKING_COUNTER used once
CURR_KEY 20020004

Symbol: CURR_KEY
   Definitions
      At line 18 in file main.s
   Uses
      At line 77 in file main.s
      At line 128 in file main.s
      At line 131 in file main.s

PREV_KEYPRESS 20020000

Symbol: PREV_KEYPRESS
   Definitions
      At line 17 in file main.s
   Uses
      At line 73 in file main.s
      At line 111 in file main.s

Timer0A_Addr 20010000

Symbol: Timer0A_Addr
   Definitions
      At line 15 in file main.s
   Uses
      At line 90 in file main.s
      At line 105 in file main.s

Timer1A_Addr 20010004

Symbol: Timer1A_Addr
   Definitions
      At line 16 in file main.s
   Uses
      At line 95 in file main.s
      At line 144 in file main.s

5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 47 in file main.s
   Uses
      At line 67 in file main.s
Comment: GPIO_Init used once
Interrupt_Init 00000000

Symbol: Interrupt_Init
   Definitions
      At line 50 in file main.s
   Uses
      At line 70 in file main.s
Comment: Interrupt_Init used once
LCD_Display_Character 00000000

Symbol: LCD_Display_Character
   Definitions
      At line 56 in file main.s
   Uses
      None
Comment: LCD_Display_Character unused
LCD_Init 00000000

Symbol: LCD_Init
   Definitions
      At line 48 in file main.s
   Uses
      At line 68 in file main.s
Comment: LCD_Init used once
LCD_go_to_second_line 00000000

Symbol: LCD_go_to_second_line
   Definitions
      At line 60 in file main.s
   Uses
      At line 135 in file main.s
Comment: LCD_go_to_second_line used once
PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 43 in file main.s
   Uses
      At line 65 in file main.s
Comment: PLL_Init used once
SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 44 in file main.s
   Uses
      At line 66 in file main.s
Comment: SysTick_Init used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 46 in file main.s
   Uses
      None
Comment: SysTick_Wait1ms unused
SysTick_Wait1us 00000000

Symbol: SysTick_Wait1us
   Definitions
      At line 45 in file main.s
   Uses
      None
Comment: SysTick_Wait1us unused
TecladoM_Poll 00000000

Symbol: TecladoM_Poll
   Definitions
      At line 52 in file main.s
   Uses
      At line 109 in file main.s
Comment: TecladoM_Poll used once
Timer0A_Handler 00000000

Symbol: Timer0A_Handler
   Definitions
      At line 55 in file main.s
   Uses
      None
Comment: Timer0A_Handler unused
Timers_Init 00000000

Symbol: Timers_Init
   Definitions
      At line 49 in file main.s
   Uses
      At line 69 in file main.s
Comment: Timers_Init used once
blink_leds 00000000

Symbol: blink_leds
   Definitions
      At line 57 in file main.s
   Uses
      At line 148 in file main.s
Comment: blink_leds used once
create_first_row 00000000

Symbol: create_first_row
   Definitions
      At line 58 in file main.s
   Uses
      At line 133 in file main.s
Comment: create_first_row used once
create_second_row 00000000

Symbol: create_second_row
   Definitions
      At line 59 in file main.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

      At line 139 in file main.s
Comment: create_second_row used once
create_table 00000000

Symbol: create_table
   Definitions
      At line 53 in file main.s
   Uses
      At line 71 in file main.s
Comment: create_table used once
multi_table 00000000

Symbol: multi_table
   Definitions
      At line 54 in file main.s
   Uses
      At line 138 in file main.s
Comment: multi_table used once
17 symbols
365 symbols in table
